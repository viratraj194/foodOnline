Index: menu/migrations/0004_auto_20221129_1935.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/menu/migrations/0004_auto_20221129_1935.py b/menu/migrations/0004_auto_20221129_1935.py
new file mode 100644
--- /dev/null	(date 1669730722097)
+++ b/menu/migrations/0004_auto_20221129_1935.py	(date 1669730722097)
@@ -0,0 +1,18 @@
+# Generated by Django 3.1.5 on 2022-11-29 14:05
+
+from django.db import migrations, models
+
+
+class Migration(migrations.Migration):
+
+    dependencies = [
+        ('menu', '0003_auto_20221117_1123'),
+    ]
+
+    operations = [
+        migrations.AlterField(
+            model_name='category',
+            name='category_name',
+            field=models.CharField(max_length=50),
+        ),
+    ]
Index: templates/marketplace/cart.html
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>{% extends 'base.html'%} {% block content %} {% load static %}\r\n<!-- Main Section Start -->\r\n<div class=\"main-section\">\r\n\r\n    <div class=\"page-section pt-5\">\r\n        <div class=\"container\">\r\n            <div class=\"row\">\r\n\r\n                <div class=\"col-lg-8 col-md-8 col-sm-8 col-xs-12\">\r\n                    <div class=\"tabs-holder horizontal\">\r\n                        <ul class=\"stickynav-tabs nav nav-tabs\">\r\n                            <li class=\"active\">\r\n                                <a data-toggle=\"tab\" href=\"#home\"> <i class=\"fa fa-shopping-cart text-danger\"></i>Cart Items</a>\r\n                            </li>\r\n\r\n                        </ul>\r\n                        <div class=\"tab-content\">\r\n                            <div id=\"home\" class=\"tab-pane in active\">\r\n                                <div class=\"menu-itam-holder\">\r\n\r\n                                    <div class=\"text-center p-5\" id=\"empty-cart\" style=\"display:none ;\">\r\n                                        <h5 class=\"text-center\">Cart is Empty.</h5>\r\n                                        <div class=\"text-center\"><a href=\"{% url 'marketplace' %}\" class=\"btn btn-success\"><i\r\n                                                    class=\"fa fa-plus\" aria-hidden=\"true\"></i> Add Items</a>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div id=\"menu-item-list-6272\" class=\"menu-itam-list\">\r\n                                        <ul>\r\n                                            {% if cart_items %} {% for item in cart_items %}\r\n                                            <li id=\"cart-item-{{item.id}}\">\r\n                                                <div class=\"image-holder\">\r\n                                                    <img src=\"{{item.fooditem.image.url}}\" alt=\"\" style=\"border: 3px solid #933b1b;\">\r\n                                                </div>\r\n                                                <div class=\"text-holder\">\r\n                                                    <h6>{{item.fooditem}}</h6>\r\n                                                    <span>{{item.fooditem.description}}</span>\r\n                                                    <a href=\"{% url 'vendor_detail' item.fooditem.vendor.vendor_slug %}\" class=\"badge badge-warning\">{{ item.fooditem.vendor }}</a>\r\n                                                </div>\r\n                                                <div class=\"price-holder\">\r\n                                                    <span class=\"price\">₹{{item.fooditem.price}}</span>\r\n                                                    <a href=\"#\" class=\"decrease_cart\" data-id=\"{{item.fooditem.id}}\" id=\"{{item.id}}\" data-url=\"{% url 'decrease_cart' item.fooditem.id%}\" style=\"margin-right: 28px;\"><i class=\"icon-minus text-color\"></i></a>\r\n                                                    <label id=\"qty-{{item.fooditem.id}}\">0</label>\r\n\r\n                                                    <a href=\"#\" class=\"add_to_cart\" data-id=\"{{item.fooditem.id}}\" data-url=\"{% url 'add_to_cart' item.fooditem.id%}\"><i class=\"icon-plus4 text-color\"></i></a>\r\n                                                    <a href=\"#\" class=\"delete_cart\" data-id=\"{{item.id}}\" data-url=\"{% url 'delete_cart' item.id%}\"><i class=\"icon-delete text-color\"></i></a>\r\n                                                </div>\r\n                                            </li>\r\n                                            {% endfor %} {%else%}\r\n                                            <div class=\"text-center p-5\">\r\n                                                <h5 class=\"text-center\">Cart is Empty.</h5>\r\n                                                <div class=\"text-center\"><a href=\"{% url 'marketplace' %}\" class=\"btn btn-success\"><i\r\n                                                            class=\"fa fa-plus\" aria-hidden=\"true\"></i> Add Items</a></div>\r\n\r\n                                            </div>\r\n                                            {%endif%}\r\n                                        </ul>\r\n\r\n                                    </div>\r\n                                    {%for item in cart_items%}\r\n                                    <span id=\"qty-{{item.fooditem.id}}\" class=\"item_qty d-none\" data-qty=\" {{item.quantities}}\"> {{item.quantities}}</span> {%endfor%}\r\n                                </div>\r\n                            </div>\r\n\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <!-- your order section -->\r\n                <div class=\"col-lg-4 col-md-4 col-sm-4 col-xs-12\">\r\n                    <div class=\"tabs-holder horizontal\">\r\n                        <ul class=\"stickynav-tabs nav nav-tabs\">\r\n                            <li class=\"active\"><a data-toggle=\"tab\" href=\"#home\"><i class=\"icon- icon-room_service\"></i>Your Order</a></li>\r\n                        </ul>\r\n                        <div class=\"tab-content\">\r\n                            <div id=\"home\" class=\"tab-pane in active\">\r\n                                <div class=\"menu-itam-holder\">\r\n\r\n                                    <div>\r\n                                        <ul>\r\n                                            <li style=\"list-style-type:none;\">\r\n                                                Subtotal\r\n                                                <span class=\"price float-right\">\r\n                                                    <span class=\"currency\">₹</span>\r\n                                                <span id=\"subtotal\">{{subtotal}}</span>\r\n                                                </span>\r\n                                            </li>\r\n                                            {% for key, value in tax_dict.items %}\r\n                                                {% for i, j in value.items %}\r\n                                                    <li style=\"list-style-type: none;\">\r\n                                                        {{ key }} <small>({{ i }}%)</small>\r\n                                                        <span class=\"price float-right\">\r\n                                                            <span class=\"currency\">$</span>\r\n                                                            <span id=\"tax-{{ key }}\">{{ j }}</span>\r\n                                                        </span>\r\n                                                    </li>\r\n                                                {% endfor %}\r\n                                            {% endfor %}\r\n                                        </ul>\r\n                                        <li style=\"list-style-type:none; font-weight: 600;\">\r\n                                            Total\r\n                                            <span class=\"price float-right\">\r\n                                                <span class=\"currency\">₹</span>\r\n                                            <span id=\"grand_total\">{{grand_total}}</span>\r\n                                            </span>\r\n                                        </li>\r\n                                        </ul>\r\n                                    </div>\r\n\r\n                                </div>\r\n                            </div>\r\n\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n<!-- Main Section End -->\r\n{%endblock%}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/templates/marketplace/cart.html b/templates/marketplace/cart.html
--- a/templates/marketplace/cart.html	(revision 96926284c9862e401d33fd268829df4a7ba99d1d)
+++ b/templates/marketplace/cart.html	(date 1672128939752)
@@ -83,25 +83,25 @@
                                                 <span id="subtotal">{{subtotal}}</span>
                                                 </span>
                                             </li>
-                                            {% for key, value in tax_dict.items %}
-                                                {% for i, j in value.items %}
-                                                    <li style="list-style-type: none;">
-                                                        {{ key }} <small>({{ i }}%)</small>
-                                                        <span class="price float-right">
+                                            {% for key, value in tax_dict.items %} {% for i, j in value.items %}
+                                            <li style="list-style-type: none;">
+                                                {{ key }} <small>({{ i }}%)</small>
+                                                <span class="price float-right">
                                                             <span class="currency">$</span>
-                                                            <span id="tax-{{ key }}">{{ j }}</span>
-                                                        </span>
-                                                    </li>
-                                                {% endfor %}
-                                            {% endfor %}
+                                                <span id="tax-{{ key }}">{{ j }}</span>
+                                                </span>
+                                            </li>
+                                            {% endfor %} {% endfor %}
                                         </ul>
                                         <li style="list-style-type:none; font-weight: 600;">
                                             Total
                                             <span class="price float-right">
                                                 <span class="currency">₹</span>
-                                            <span id="grand_total">{{grand_total}}</span>
+                                            <span id="total">{{grand_total}}</span>
                                             </span>
                                         </li>
+                                        <a href="{% url 'checkout' %}" class="btn btn-danger w-100 p-2 mt-3 mb-3">PROCEED TO CHECKOUT</a>
+
                                         </ul>
                                     </div>
 
Index: orders/migrations/0001_initial.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/orders/migrations/0001_initial.py b/orders/migrations/0001_initial.py
new file mode 100644
--- /dev/null	(date 1672127696238)
+++ b/orders/migrations/0001_initial.py	(date 1672127696238)
@@ -0,0 +1,78 @@
+# Generated by Django 4.1.3 on 2022-12-27 07:54
+
+from django.conf import settings
+from django.db import migrations, models
+import django.db.models.deletion
+
+
+class Migration(migrations.Migration):
+
+    initial = True
+
+    dependencies = [
+        ('menu', '0004_auto_20221129_1935'),
+        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
+    ]
+
+    operations = [
+        migrations.CreateModel(
+            name='Order',
+            fields=[
+                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
+                ('order_number', models.CharField(max_length=20)),
+                ('first_name', models.CharField(max_length=50)),
+                ('last_name', models.CharField(max_length=50)),
+                ('phone', models.CharField(blank=True, max_length=15)),
+                ('email', models.EmailField(max_length=50)),
+                ('address', models.CharField(max_length=200)),
+                ('country', models.CharField(blank=True, max_length=15)),
+                ('state', models.CharField(blank=True, max_length=15)),
+                ('city', models.CharField(max_length=50)),
+                ('pin_code', models.CharField(max_length=10)),
+                ('total', models.FloatField()),
+                ('tax_data', models.JSONField(blank=True, help_text="Data format: {'tax_type':{'tax_percentage':'tax_amount'}}")),
+                ('total_tax', models.FloatField()),
+                ('payment_method', models.CharField(max_length=25)),
+                ('status', models.CharField(choices=[('New', 'New'), ('Accepted', 'Accepted'), ('Completed', 'Completed'), ('Cancelled', 'Cancelled')], default='New', max_length=15)),
+                ('is_ordered', models.BooleanField(default=False)),
+                ('created_at', models.DateTimeField(auto_now_add=True)),
+                ('updated_at', models.DateTimeField(auto_now=True)),
+            ],
+        ),
+        migrations.CreateModel(
+            name='Payment',
+            fields=[
+                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
+                ('transaction_id', models.CharField(max_length=100)),
+                ('payment_method', models.CharField(choices=[('PayPal', 'PayPal'), ('RazorPay', 'RazorPay')], max_length=100)),
+                ('amount', models.CharField(max_length=10)),
+                ('created_at', models.DateTimeField(auto_now_add=True)),
+                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
+            ],
+        ),
+        migrations.CreateModel(
+            name='OrderedFood',
+            fields=[
+                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
+                ('quantity', models.IntegerField()),
+                ('price', models.FloatField()),
+                ('amount', models.FloatField()),
+                ('created_at', models.DateTimeField(auto_now_add=True)),
+                ('updated_at', models.DateTimeField(auto_now=True)),
+                ('fooditem', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='menu.fooditem')),
+                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='orders.order')),
+                ('payment', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='orders.payment')),
+                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
+            ],
+        ),
+        migrations.AddField(
+            model_name='order',
+            name='payment',
+            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='orders.payment'),
+        ),
+        migrations.AddField(
+            model_name='order',
+            name='user',
+            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
+        ),
+    ]
Index: orders/views.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/orders/views.py b/orders/views.py
new file mode 100644
--- /dev/null	(date 1672506670356)
+++ b/orders/views.py	(date 1672506670356)
@@ -0,0 +1,148 @@
+from django.shortcuts import render,redirect
+from django.http import HttpResponse,JsonResponse
+from marketplace.models import Cart
+from marketplace.context_processors import get_cart_amounts
+from . forms import OrderForm
+from.models import Order,Payment, OrderedFood
+import simplejson as json
+from accounts.utlis import send_notification
+from . utils import generate_order_number
+from django.contrib.auth.decorators import login_required
+
+@login_required(login_url='login')
+def place_order(request):
+    cart_items = Cart.objects.filter(user = request.user).order_by('created_at')
+    cart_count = cart_items.count()
+    if cart_count <= 0:
+        return redirect('marketplace')
+
+    subtotal = get_cart_amounts(request)['subtotal']
+    total_tax = get_cart_amounts(request)['tax']
+    grand_total = get_cart_amounts(request)['grand_total']
+    tax_data = get_cart_amounts(request)['tax_dict']
+    if request.method == 'POST':
+        form = OrderForm(request.POST)
+        if form.is_valid():
+            order = Order()
+            order.first_name = form.cleaned_data['first_name']
+            order.last_name = form.cleaned_data['last_name']
+            order.phone = form.cleaned_data['phone']
+            order.email = form.cleaned_data['email']
+            order.address = form.cleaned_data['address']
+            order.country = form.cleaned_data['country']
+            order.state = form.cleaned_data['state']
+            order.city = form.cleaned_data['city']
+            order.pin_code = form.cleaned_data['pin_code']
+            order.user = request.user
+            order.total = grand_total
+            order.tax_data = json.dumps(tax_data)
+            order.total_tax = total_tax
+            order.payment_method = request.POST['payment_method']
+            order.save()#id will be generated
+            order.order_number = generate_order_number(order.id)
+            order.save()
+            context = {
+                'order': order,
+                'cart_items':cart_items,
+
+            }
+            return render(request,'orders/place_order.html',context)
+        else:
+            print(form.errors)
+    return render(request,'orders/place_order.html')
+
+@login_required(login_url='login')
+def payments(request):
+    # check if the request is ajax
+    if request.headers.get('x-requested-with') == 'XMLHttpRequest' and request.method == 'POST':    # store the payments details in payments models
+        order_number = request.POST.get('order_number')
+        transaction_id = request.POST.get('transaction_id')
+        payment_method = request.POST.get('payment_method')
+        status = request.POST.get('status')
+
+
+        order = Order.objects.get(user=request.user, order_number=order_number)
+        payment = Payment(
+            user = request.user,
+            transaction_id = transaction_id,
+            payment_method = payment_method,
+            amount = order.total,
+            status = status
+        )
+        payment.save()
+
+        # UPDATE THE ORDER MODEL
+        order.payment = payment
+        order.is_ordered = True
+        order.save()
+
+        # move the cart item to ordered food model
+        cart_items = Cart.objects.filter(user = request.user)
+        for item in cart_items:
+            ordered_food = OrderedFood()
+            ordered_food.order = order
+            ordered_food.payment = payment
+            ordered_food.user = request.user
+            ordered_food.fooditem = item.fooditem
+            ordered_food.quantity = item.quantities
+            ordered_food.price = item.fooditem.price
+            ordered_food.amount = item.fooditem.price * item.quantities #total amounts
+            ordered_food.save()   
+
+        # send order conformation email to customers
+        mail_subjects = 'Thank you for ordering with us'
+        mail_template = 'orders/order_confirmation_email.html'
+        context = {
+            'user':request.user,
+            'order':order,
+            'to_email':order.email,
+        }
+        send_notification(mail_subjects,mail_template,context)
+
+        # send order received mail to vendors
+        mail_subject = 'you have received new order.'
+        mail_template = 'orders/new_order_received.html'
+        to_emails = []
+        
+        for i in cart_items:
+            if i.fooditem.vendor.user.email not in to_emails:
+                to_emails.append(i.fooditem.vendor.user.email)
+       
+        print('to_email==>',to_emails)
+        context = {
+            'order':order,
+            'to_email':to_emails,
+        }
+        send_notification(mail_subjects,mail_template,context)
+
+        # clear teh cart if the payment is success
+        # cart_items.delete()
+        response = {
+            'order_number':order_number,
+            'transaction_id':transaction_id,
+        }
+        return JsonResponse(response)
+        # return back to ajax whit the status success or failure
+    return HttpResponse('payments views')
+
+
+def order_complete(request):
+    order_number = request.GET.get('order_no')
+    transaction_id = request.GET.get('trans_id')
+
+    try:
+        order = Order.objects.get(order_number=order_number, payment__transaction_id=transaction_id, is_ordered=True)
+        ordered_food = OrderedFood.objects.filter(order=order)
+        subtotal = 0
+        for item in ordered_food:
+            subtotal +=(item.price * item.quantity)
+        tax_data = json.loads(order.tax_data)
+        context = {
+            'order':order,
+            'ordered_food':ordered_food,
+            'subtotal':subtotal,
+            'tax_data':tax_data,
+        }
+        return render(request,'orders/order_complete.html',context)
+    except:
+        return redirect('home')
\ No newline at end of file
Index: orders/utils.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/orders/utils.py b/orders/utils.py
new file mode 100644
--- /dev/null	(date 1672205521486)
+++ b/orders/utils.py	(date 1672205521486)
@@ -0,0 +1,7 @@
+import datetime
+
+
+def generate_order_number(pk):
+    current_datetime = datetime.datetime.now().strftime('%Y%m%d%H%M%S')#202212281059
+    order_number = current_datetime + str(pk)
+    return order_number
\ No newline at end of file
Index: templates/customers/cprofile.html
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/templates/customers/cprofile.html b/templates/customers/cprofile.html
new file mode 100644
--- /dev/null	(date 1672064651738)
+++ b/templates/customers/cprofile.html	(date 1672064651738)
@@ -0,0 +1,145 @@
+{% extends 'base.html'%} {% block content %} {%load static %} {%include 'includes/alert.html' %}
+
+<!-- Main Section Start -->
+<div class="main-section">
+    {% include 'customers/cover.html' %}
+    <div class="page-section account-header buyer-logged-in">
+        <div class="container">
+            <div class="row">
+                <div class="col-lg-3 col-md-3 col-sm-12 col-xs-12">
+                    <!--							load side bar form v_sidebar-->
+                    {%include 'includes/c_sidebar.html'%}
+                </div>
+                <div class="col-lg-9 col-md-9 col-sm-12 col-xs-12">
+                    <div class="user-dashboard loader-holder">
+                        <div class="user-holder">
+                            <h5 class="text-uppercase">Profile settings</h5>
+                            <form action="{% url 'cprofile' %} " method="POST" enctype="multipart/form-data">
+                                {%csrf_token%}
+                                <div class="form-fields-set">
+                                    <ul>
+                                        <li>
+                                            <div class="row">
+                                                <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">
+                                                    <div class="restaurant-info">
+                                                        <div class="img-holder">
+                                                            <ul class="foodbakery-gallery-holder">
+                                                                <li class="gal-img">
+                                                                    <div class="drag-list">
+                                                                        <div class="item-thumb">
+                                                                            {% if profile.profile_picture%}
+                                                                            <img class="thumbnail" src="{{profile.profile_picture.url}}" alt="Logo"> {%else%}
+                                                                            <img src="{%static 'images/default-profile.PNG'%}" alt="profile"> {%endif%}
+                                                                        </div>
+                                                                    </div>
+                                                                </li>
+                                                            </ul>
+                                                        </div>
+                                                        <div class="text-holder">
+                                                            <label>Update Logo</label>
+                                                            <div class="upload-gallery">
+                                                                {{profile_form.profile_picture}}
+                                                            </div>
+                                                        </div>
+                                                        <label class="text-danger">{{profile_form.profile_picture.errors}}</label>
+                                                    </div>
+                                                </div>
+                                                <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">
+                                                    <div class="restaurant-info">
+                                                        <div class="img-holder">
+                                                            <ul class="foodbakery-gallery-holder">
+                                                                <li class="gal-img">
+                                                                    <div class="drag-list">
+                                                                        <div class="item-thumb">
+                                                                            {%if profile.cover_photo%}
+                                                                            <img class="thumbnail" src="{{profile.cover_photo.url}}" alt="Cover Photo"> {%else%}
+                                                                            <img class="thumbnail" src="{%static 'images/default-cover.PNG'%}" alt="Cover Photo"> {%endif%}
+                                                                        </div>
+                                                                    </div>
+                                                                </li>
+                                                            </ul>
+                                                        </div>
+                                                        <div class="text-holder">
+                                                            <label>Update Cover Photo</label>
+                                                            <div class="upload-gallery">
+                                                                {{profile_form.cover_photo}}
+                                                            </div>
+
+                                                        </div>
+                                                    </div>
+                                                </div>
+
+                                                <div class="col-lg-6 col-md-6 col-sm-12 col-xs-12">
+                                                    <div class="field-holder">
+                                                        <label>First Name*</label> {{user_form.first_name}}
+                                                    </div>
+                                                </div>
+                                                <div class="col-lg-6 col-md-6 col-sm-12 col-xs-12">
+                                                    <div class="field-holder">
+                                                        <label>Last Name*</label> {{user_form.last_name}}
+                                                    </div>
+                                                </div>
+                                                <div class="col-lg-6 col-md-6 col-sm-12 col-xs-12">
+                                                    <div class="field-holder">
+                                                        <label>Phone Number*</label> {{user_form.phone_number}}
+                                                    </div>
+                                                </div>
+                                                <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">
+                                                    <div class="field-holder">
+                                                        <label>Address  *</label> {{profile_form.address}}
+                                                        <small class="text-muted float-right">Powered by Google</small>
+                                                    </div>
+                                                </div>
+
+                                                <div class="col-lg-6 col-md-6 col-sm-12 col-xs-12">
+                                                    <div class="field-holder">
+                                                        <label>Country *</label> {{profile_form.country}}
+                                                    </div>
+                                                </div>
+                                                <div class="col-lg-6 col-md-6 col-sm-12 col-xs-12">
+                                                    <div class="field-holder">
+                                                        <label>State *</label> {{profile_form.state}}
+                                                    </div>
+                                                </div>
+                                                <div class="col-lg-6 col-md-6 col-sm-12 col-xs-12">
+                                                    <div class="field-holder">
+                                                        <label>City *</label> {{profile_form.city}}
+                                                    </div>
+                                                </div>
+                                                <div class="col-lg-6 col-md-6 col-sm-12 col-xs-12">
+                                                    <div class="field-holder">
+                                                        <label>Pin Code *</label> {{profile_form.pin_code}}
+                                                    </div>
+                                                </div>
+                                                <div class="col-lg-6 col-md-6 col-sm-12 col-xs-12">
+                                                    <div class="field-holder">
+                                                        <label>Latitude *</label> {{profile_form.latitude}}
+                                                    </div>
+                                                </div>
+                                                <div class="col-lg-6 col-md-6 col-sm-12 col-xs-12">
+                                                    <div class="field-holder">
+                                                        <label>Longitude *</label> {{profile_form.longitude}}
+                                                    </div>
+                                                </div>
+
+                                            </div>
+                                        </li>
+                                    </ul>
+                                    <div>
+                                        <div class="field-holder">
+                                            <div class="payment-holder input-button-loader">
+                                                <input type="submit" value="Update Profile">
+                                            </div>
+                                        </div>
+                                    </div>
+                                </div>
+                            </form>
+                        </div>
+                    </div>
+                </div>
+            </div>
+        </div>
+    </div>
+</div>
+<!-- Main Section End -->
+{% endblock%}
\ No newline at end of file
Index: orders/urls.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/orders/urls.py b/orders/urls.py
new file mode 100644
--- /dev/null	(date 1672419936793)
+++ b/orders/urls.py	(date 1672419936793)
@@ -0,0 +1,8 @@
+from django.urls import path
+from . import views
+
+urlpatterns =[
+    path('place_order/',views.place_order,name='place_order'),
+    path('payments/',views.payments, name='payments'),
+    path('order_complete/',views.order_complete,name='order_complete')
+]
\ No newline at end of file
Index: templates/customers/cover.html
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/templates/customers/cover.html b/templates/customers/cover.html
new file mode 100644
--- /dev/null	(date 1672067987061)
+++ b/templates/customers/cover.html	(date 1672067987061)
@@ -0,0 +1,36 @@
+{%load static %}
+<div class="page-section restaurant-detail-image-section" style=" background: url({% if user_profile.cover_photo %}{{user_profile.cover_photo.url}}{% else %}{% static 'extra-images/banner-img.jpg'%} {% endif %}) no-repeat scroll 0 0 / cover;">
+    <!-- Container Start -->
+    <div class="container">
+        <!-- Row Start -->
+        <div class="row">
+            <!-- Column Start -->
+            <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">
+                <div class="company-info-detail">
+                    <div class="company-info">
+                        <div class="img-holder">
+                            <figure>
+                                {% if user_profile.profile_picture %}
+                                <img src="{{ user_profile.profile_picture.url}}" alt="">
+                                {% else %}
+                                <img src="{% static 'extra-images/listing-logo18.png'%}" alt="">
+                                {% endif %}
+                            </figure>
+                        </div>
+
+                        <div class="text-holder">
+                            <span class="restaurant-title">{{user.first_name}} {{user.last_name}}</span>
+                            <div class="text">
+                                <i class="icon-location"></i>
+                                <p>{{user.phone_number}}</p>
+                            </div>
+                        </div>
+                    </div>
+                </div>
+            </div>
+            <!-- Column End -->
+        </div>
+        <!-- Row End -->
+    </div>
+    <!-- Container End -->
+</div
\ No newline at end of file
Index: orders/tests.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/orders/tests.py b/orders/tests.py
new file mode 100644
--- /dev/null	(date 1672125911010)
+++ b/orders/tests.py	(date 1672125911010)
@@ -0,0 +1,3 @@
+from django.test import TestCase
+
+# Create your tests here.
Index: orders/models.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/orders/models.py b/orders/models.py
new file mode 100644
--- /dev/null	(date 1672330643166)
+++ b/orders/models.py	(date 1672330643166)
@@ -0,0 +1,75 @@
+from django.db import models
+from django.shortcuts import render
+from accounts.models import User
+from menu.models import FoodItem
+
+class Payment(models.Model):
+    PAYMENT_METHOD = (
+        ('PayPal','PayPal'),
+        ('RazorPay','RazorPay'),
+    )
+    user = models.ForeignKey(User,on_delete=models.CASCADE)
+    transaction_id = models.CharField(max_length=100)
+    payment_method = models.CharField(choices=PAYMENT_METHOD,max_length=100)
+    amount = models.CharField(max_length=10)
+    status = models.CharField(max_length=100)
+    created_at = models.DateTimeField(auto_now_add=True)
+
+    def __str__(self):
+        return self.transaction_id
+
+
+
+class Order(models.Model):
+    STATUS = (
+        ('New','New'),
+        ('Accepted','Accepted'),
+        ('Completed','Completed'),
+        ('Cancelled','Cancelled'),
+    )
+    user = models.ForeignKey(User,on_delete=models.SET_NULL, null=True)
+    payment = models.ForeignKey(Payment,on_delete=models.SET_NULL, blank=True, null=True)
+    order_number = models.CharField(max_length=20)
+    first_name = models.CharField(max_length=50)
+    last_name = models.CharField(max_length=50)
+    phone = models.CharField(max_length=15,blank=True)
+    email = models.EmailField(max_length=50)
+    address = models.CharField(max_length=200)
+    country = models.CharField(max_length=15,blank=True)
+    state = models.CharField(max_length=15,blank=True)
+    city = models.CharField(max_length=50)
+    pin_code = models.CharField(max_length=10)
+    total = models.FloatField()
+    tax_data = models.JSONField(blank=True, help_text = "Data format: {'tax_type':{'tax_percentage':'tax_amount'}}")
+    total_tax = models.FloatField()
+    payment_method = models.CharField(max_length=25)
+    status = models.CharField(max_length=15, choices=STATUS, default='New')
+    is_ordered = models.BooleanField(default=False)
+    created_at = models.DateTimeField(auto_now_add=True)
+    updated_at = models.DateTimeField(auto_now=True)
+
+
+    #Concatenate first name and last name
+    @property
+    def name(self):
+        return f'{self.first_name} {self.last_name}'
+    
+
+    def __str__(self) :
+        return self.order_number
+
+
+
+class OrderedFood(models.Model):
+    order = models.ForeignKey(Order, on_delete=models.CASCADE)
+    payment = models.ForeignKey(Payment, on_delete=models.SET_NULL, blank=True, null=True)
+    user = models.ForeignKey(User, on_delete=models.CASCADE)
+    fooditem = models.ForeignKey(FoodItem, on_delete=models.CASCADE)
+    quantity = models.IntegerField()
+    price = models.FloatField()
+    amount = models.FloatField()
+    created_at = models.DateTimeField(auto_now_add=True)
+    updated_at = models.DateTimeField(auto_now=True)
+
+    def __str__(self):
+        return self.fooditem.food_title
\ No newline at end of file
Index: foodonline/static/css/custom.css
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>@keyframes show-toast {\r\n    0% {\r\n        bottom: -100%\r\n    }\r\n    20% {\r\n        bottom: 100px\r\n    }\r\n    80% {\r\n        bottom: 100px\r\n    }\r\n    100% {\r\n        bottom: -100%\r\n    }\r\n}\r\n\r\n.show-notification {\r\n    position: fixed;\r\n    bottom: 100%;\r\n    right: 20px;\r\n    animation-name: show-toast;\r\n    animation-duration: 800000000s;\r\n    z-index: 99;\r\n}\r\n\r\n.btn {\r\n    padding: 3px 1.75em;\r\n    font-size: 12px;\r\n    cursor: pointer;\r\n}\r\n\r\n.main-search.fancy .field-holder input[type=\"text\"] {\r\n    color: #000000 !important;\r\n}\r\n\r\ntable>tbody>tr>td {\r\n    border: none !important;\r\n}\r\n\r\n#opening_hours select {\r\n    padding: 5px 10px !important;\r\n}\r\n\r\n.btn-success.add_hour {\r\n    padding: 7px 15px 7px 15px;\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/foodonline/static/css/custom.css b/foodonline/static/css/custom.css
--- a/foodonline/static/css/custom.css	(revision 96926284c9862e401d33fd268829df4a7ba99d1d)
+++ b/foodonline/static/css/custom.css	(date 1672149879942)
@@ -42,4 +42,37 @@
 
 .btn-success.add_hour {
     padding: 7px 15px 7px 15px;
+}
+
+
+/* hide radio */
+
+.payment_method [type=radio] {
+    position: absolute;
+    opacity: 0;
+    width: 0;
+    height: 0;
+}
+
+.payment_method label {
+    margin: 0 4px;
+    padding: 2px;
+}
+
+
+/* image style */
+
+.payment_method [type=radio]+img {
+    cursor: pointer;
+}
+
+.payment_method img {
+    padding: 5px;
+}
+
+
+/* check style */
+
+.payment_method [type=radio]:checked+img {
+    outline: 2px solid red;
 }
\ No newline at end of file
Index: orders/migrations/0002_alter_order_user.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/orders/migrations/0002_alter_order_user.py b/orders/migrations/0002_alter_order_user.py
new file mode 100644
--- /dev/null	(date 1672163585896)
+++ b/orders/migrations/0002_alter_order_user.py	(date 1672163585896)
@@ -0,0 +1,21 @@
+# Generated by Django 4.1.3 on 2022-12-27 17:53
+
+from django.conf import settings
+from django.db import migrations, models
+import django.db.models.deletion
+
+
+class Migration(migrations.Migration):
+
+    dependencies = [
+        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
+        ('orders', '0001_initial'),
+    ]
+
+    operations = [
+        migrations.AlterField(
+            model_name='order',
+            name='user',
+            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL),
+        ),
+    ]
Index: accounts/migrations/0007_userprofile_location.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/accounts/migrations/0007_userprofile_location.py b/accounts/migrations/0007_userprofile_location.py
new file mode 100644
--- /dev/null	(date 1669877136208)
+++ b/accounts/migrations/0007_userprofile_location.py	(date 1669877136208)
@@ -0,0 +1,19 @@
+# Generated by Django 4.1.3 on 2022-12-01 06:45
+
+import django.contrib.gis.db.models.fields
+from django.db import migrations
+
+
+class Migration(migrations.Migration):
+
+    dependencies = [
+        ('accounts', '0006_auto_20221028_1927'),
+    ]
+
+    operations = [
+        migrations.AddField(
+            model_name='userprofile',
+            name='location',
+            field=django.contrib.gis.db.models.fields.PointField(blank=True, null=True, srid=4326),
+        ),
+    ]
Index: .vscode/settings.json
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>{\r\n    \"cSpell.words\": [\r\n        \"cust\",\r\n        \"foodimages\",\r\n        \"fooditem\",\r\n        \"fooditems\",\r\n        \"foodonline\",\r\n        \"gismodels\",\r\n        \"superadmin\",\r\n        \"swal\",\r\n        \"uidb\",\r\n        \"utlis\",\r\n        \"vndr\",\r\n        \"vprofile\"\r\n    ],\r\n    \"favorites.resources\": []\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.vscode/settings.json b/.vscode/settings.json
--- a/.vscode/settings.json	(revision 96926284c9862e401d33fd268829df4a7ba99d1d)
+++ b/.vscode/settings.json	(date 1672161528434)
@@ -6,6 +6,7 @@
         "fooditems",
         "foodonline",
         "gismodels",
+        "simplejson",
         "superadmin",
         "swal",
         "uidb",
Index: orders/forms.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/orders/forms.py b/orders/forms.py
new file mode 100644
--- /dev/null	(date 1672131331212)
+++ b/orders/forms.py	(date 1672131331212)
@@ -0,0 +1,8 @@
+from django import forms
+from.models import Order
+
+
+class OrderForm(forms.ModelForm):
+    class Meta:
+        model = Order
+        fields = ['first_name','last_name','phone','email','address','country','state','city','pin_code']
Index: orders/apps.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/orders/apps.py b/orders/apps.py
new file mode 100644
--- /dev/null	(date 1672125911002)
+++ b/orders/apps.py	(date 1672125911002)
@@ -0,0 +1,6 @@
+from django.apps import AppConfig
+
+
+class OrdersConfig(AppConfig):
+    default_auto_field = 'django.db.models.BigAutoField'
+    name = 'orders'
Index: orders/migrations/0003_alter_order_payment.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/orders/migrations/0003_alter_order_payment.py b/orders/migrations/0003_alter_order_payment.py
new file mode 100644
--- /dev/null	(date 1672163594170)
+++ b/orders/migrations/0003_alter_order_payment.py	(date 1672163594170)
@@ -0,0 +1,19 @@
+# Generated by Django 4.1.3 on 2022-12-27 17:53
+
+from django.db import migrations, models
+import django.db.models.deletion
+
+
+class Migration(migrations.Migration):
+
+    dependencies = [
+        ('orders', '0002_alter_order_user'),
+    ]
+
+    operations = [
+        migrations.AlterField(
+            model_name='order',
+            name='payment',
+            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='orders.payment'),
+        ),
+    ]
Index: orders/admin.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/orders/admin.py b/orders/admin.py
new file mode 100644
--- /dev/null	(date 1672388550158)
+++ b/orders/admin.py	(date 1672388550158)
@@ -0,0 +1,16 @@
+from django.contrib import admin
+from.models import Payment,Order,OrderedFood
+
+class OrderedFoodInline(admin.TabularInline):
+    model = OrderedFood
+    readonly_fields = ('order','payment','user','fooditem','quantity','price','amount')
+    extra = 0
+
+class OrderAdmin(admin.ModelAdmin):
+    list_display = ['order_number','name','phone','email','total','payment_method','status','is_ordered']
+    inlines = [OrderedFoodInline]
+
+
+admin.site.register(Payment)
+admin.site.register(Order,OrderAdmin)
+admin.site.register(OrderedFood)
\ No newline at end of file
Index: templates/vendor/opening_hours.html
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/templates/vendor/opening_hours.html b/templates/vendor/opening_hours.html
new file mode 100644
--- /dev/null	(date 1670513991462)
+++ b/templates/vendor/opening_hours.html	(date 1670513991462)
@@ -0,0 +1,71 @@
+{%extends 'base.html'%} {%load static%} {% block content%} {%include 'includes/alert.html'%}
+<!-- Main Section Start -->
+<style>
+    .btn {
+        padding: 2px 1.7rem;
+        cursor: pointer;
+    }
+</style>
+<div class="main-section">
+    {%include 'includes/cover.html'%}
+    <div class="page-section account-header buyer-logged-in">
+        <div class="container">
+            <div class="row">
+                <div class="col-lg-3 col-md-3 col-sm-12 col-xs-12">
+                    <!--							load side bar form v_sidebar-->
+                    {%include 'includes/v_sidebar.html'%}
+                </div>
+                <div class="col-lg-9 col-md-9 col-sm-12 col-xs-12">
+                    <div class="user-dashboard loader-holder">
+                        <div class="user-holder">
+                            <h5 class="text-uppercase">Opening Hours</h5>
+                            <!-- My Restaurants Form Start -->
+                            <hr>
+
+                            <table class="table   opening_hours" style="width: 500px; border: none !important;">
+                                <tbody>
+                                    {% for hour in opening_hours %}
+                                    <tr id="hour-{{hour.id}}">
+                                        <td><b>{{hour}}</b></td>
+                                        <td>{% if hour.is_close %} close {% else %} {{hour.from_hour}} -{{hour.to_hour}}{%endif%}</td>
+                                        <td>
+                                            <a class="remove_hour" data-url="{% url 'remove_opening_hours' hour.id%}" href="#">Remove</a>
+                                        </td>
+                                    </tr>
+                                    {%endfor%}
+                                </tbody>
+                            </table>
+
+                            <br>
+
+                            <form action="#" id="opening_hours">
+                                {%csrf_token%}
+                                <div class="row">
+                                    <div class="col-md-2" style="padding-right: 0px;">
+                                        {{form.day}}
+                                    </div>
+                                    <div class="col-md-2">
+                                        {{form.from_hour}}
+                                    </div>
+                                    <div class="col-md-2">
+                                        {{form.to_hour}}
+                                    </div>
+                                    <div class="col-md-3">
+                                        {{form.is_close}} set as close
+                                    </div>
+                                    <div class="col-md-2">
+                                        <input type="hidden" value="{% url 'add_opening_hours'%}" id="add_hour_url">
+                                        <button class="btn btn-success add_hour">Add hour </button>
+                                    </div>
+                                </div>
+                            </form>
+
+                        </div>
+                    </div>
+                </div>
+            </div>
+        </div>
+    </div>
+</div>
+<!-- Main Section End -->
+{%endblock%}
\ No newline at end of file
Index: vendor/migrations/0005_alter_openinghours_unique_together.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/vendor/migrations/0005_alter_openinghours_unique_together.py b/vendor/migrations/0005_alter_openinghours_unique_together.py
new file mode 100644
--- /dev/null	(date 1670514137930)
+++ b/vendor/migrations/0005_alter_openinghours_unique_together.py	(date 1670514137930)
@@ -0,0 +1,17 @@
+# Generated by Django 4.1.3 on 2022-12-08 15:42
+
+from django.db import migrations
+
+
+class Migration(migrations.Migration):
+
+    dependencies = [
+        ('vendor', '0004_openinghours'),
+    ]
+
+    operations = [
+        migrations.AlterUniqueTogether(
+            name='openinghours',
+            unique_together={('vendor', 'day', 'from_hour', 'to_hour')},
+        ),
+    ]
Index: vendor/migrations/0004_openinghours.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/vendor/migrations/0004_openinghours.py b/vendor/migrations/0004_openinghours.py
new file mode 100644
--- /dev/null	(date 1670318401500)
+++ b/vendor/migrations/0004_openinghours.py	(date 1670318401500)
@@ -0,0 +1,29 @@
+# Generated by Django 4.1.3 on 2022-12-06 09:20
+
+from django.db import migrations, models
+import django.db.models.deletion
+
+
+class Migration(migrations.Migration):
+
+    dependencies = [
+        ('vendor', '0003_auto_20221116_1256'),
+    ]
+
+    operations = [
+        migrations.CreateModel(
+            name='OpeningHours',
+            fields=[
+                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
+                ('day', models.IntegerField(choices=[(1, 'Monday'), (2, 'Tuesday'), (3, 'Wednesday'), (4, 'Thursday'), (5, 'Friday'), (6, 'Saturday'), (7, 'Sunday')])),
+                ('from_hour', models.CharField(blank=True, choices=[('12:00 AM', '12:00 AM'), ('12:30 AM', '12:30 AM'), ('01:00 AM', '01:00 AM'), ('01:30 AM', '01:30 AM'), ('02:00 AM', '02:00 AM'), ('02:30 AM', '02:30 AM'), ('03:00 AM', '03:00 AM'), ('03:30 AM', '03:30 AM'), ('04:00 AM', '04:00 AM'), ('04:30 AM', '04:30 AM'), ('05:00 AM', '05:00 AM'), ('05:30 AM', '05:30 AM'), ('06:00 AM', '06:00 AM'), ('06:30 AM', '06:30 AM'), ('07:00 AM', '07:00 AM'), ('07:30 AM', '07:30 AM'), ('08:00 AM', '08:00 AM'), ('08:30 AM', '08:30 AM'), ('09:00 AM', '09:00 AM'), ('09:30 AM', '09:30 AM'), ('10:00 AM', '10:00 AM'), ('10:30 AM', '10:30 AM'), ('11:00 AM', '11:00 AM'), ('11:30 AM', '11:30 AM'), ('12:00 PM', '12:00 PM'), ('12:30 PM', '12:30 PM'), ('01:00 PM', '01:00 PM'), ('01:30 PM', '01:30 PM'), ('02:00 PM', '02:00 PM'), ('02:30 PM', '02:30 PM'), ('03:00 PM', '03:00 PM'), ('03:30 PM', '03:30 PM'), ('04:00 PM', '04:00 PM'), ('04:30 PM', '04:30 PM'), ('05:00 PM', '05:00 PM'), ('05:30 PM', '05:30 PM'), ('06:00 PM', '06:00 PM'), ('06:30 PM', '06:30 PM'), ('07:00 PM', '07:00 PM'), ('07:30 PM', '07:30 PM'), ('08:00 PM', '08:00 PM'), ('08:30 PM', '08:30 PM'), ('09:00 PM', '09:00 PM'), ('09:30 PM', '09:30 PM'), ('10:00 PM', '10:00 PM'), ('10:30 PM', '10:30 PM'), ('11:00 PM', '11:00 PM'), ('11:30 PM', '11:30 PM')], max_length=10)),
+                ('to_hour', models.CharField(blank=True, choices=[('12:00 AM', '12:00 AM'), ('12:30 AM', '12:30 AM'), ('01:00 AM', '01:00 AM'), ('01:30 AM', '01:30 AM'), ('02:00 AM', '02:00 AM'), ('02:30 AM', '02:30 AM'), ('03:00 AM', '03:00 AM'), ('03:30 AM', '03:30 AM'), ('04:00 AM', '04:00 AM'), ('04:30 AM', '04:30 AM'), ('05:00 AM', '05:00 AM'), ('05:30 AM', '05:30 AM'), ('06:00 AM', '06:00 AM'), ('06:30 AM', '06:30 AM'), ('07:00 AM', '07:00 AM'), ('07:30 AM', '07:30 AM'), ('08:00 AM', '08:00 AM'), ('08:30 AM', '08:30 AM'), ('09:00 AM', '09:00 AM'), ('09:30 AM', '09:30 AM'), ('10:00 AM', '10:00 AM'), ('10:30 AM', '10:30 AM'), ('11:00 AM', '11:00 AM'), ('11:30 AM', '11:30 AM'), ('12:00 PM', '12:00 PM'), ('12:30 PM', '12:30 PM'), ('01:00 PM', '01:00 PM'), ('01:30 PM', '01:30 PM'), ('02:00 PM', '02:00 PM'), ('02:30 PM', '02:30 PM'), ('03:00 PM', '03:00 PM'), ('03:30 PM', '03:30 PM'), ('04:00 PM', '04:00 PM'), ('04:30 PM', '04:30 PM'), ('05:00 PM', '05:00 PM'), ('05:30 PM', '05:30 PM'), ('06:00 PM', '06:00 PM'), ('06:30 PM', '06:30 PM'), ('07:00 PM', '07:00 PM'), ('07:30 PM', '07:30 PM'), ('08:00 PM', '08:00 PM'), ('08:30 PM', '08:30 PM'), ('09:00 PM', '09:00 PM'), ('09:30 PM', '09:30 PM'), ('10:00 PM', '10:00 PM'), ('10:30 PM', '10:30 PM'), ('11:00 PM', '11:00 PM'), ('11:30 PM', '11:30 PM')], max_length=10)),
+                ('is_close', models.BooleanField(default=False)),
+                ('vendor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='vendor.vendor')),
+            ],
+            options={
+                'ordering': ('day', 'from_hour'),
+                'unique_together': {('day', 'from_hour', 'to_hour')},
+            },
+        ),
+    ]
Index: templates/marketplace/checkout.html
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/templates/marketplace/checkout.html b/templates/marketplace/checkout.html
new file mode 100644
--- /dev/null	(date 1672159150121)
+++ b/templates/marketplace/checkout.html	(date 1672159150121)
@@ -0,0 +1,188 @@
+{% extends 'base.html'%} {% block content %} {% load static %}
+<!-- Main Section Start -->
+<div class="main-section">
+
+    <div class="page-section pt-5">
+        <div class="container">
+            <div class="row">
+
+                <div class="col-lg-6 col-md-6 col-sm-12 col-xs-12">
+                    <div class="tabs-holder horizontal">
+                        <ul class="stickynav-tabs nav nav-tabs">
+                            <li class="active">
+                                <a data-toggle="tab" href="#home"> <i class="fa fa-shopping-cart text-danger"></i>Billing Address</a>
+                            </li>
+
+                        </ul>
+                        <div class="tab-content">
+                            <div id="home" class="tab-pane in active">
+                                <div class="menu-itam-holder">
+
+
+                                    <div id="menu-item-list-6272" class="menu-itam-list mb-3">
+                                        <form action="{% url 'place_order'%}" method="POST">
+                                            {%csrf_token%}
+                                            <div class="row">
+                                                <div class="form-group col-md-6 col-sm-12 col-lg-6">
+                                                    First Name:{{form.first_name}}
+                                                </div>
+                                                <div class="form-group col-md-6 col-sm-12 col-lg-6">
+                                                    Last Name:{{form.last_name}}
+                                                </div>
+                                            </div>
+                                            <div class="row">
+                                                <div class="form-group col-md-6 col-sm-12 col-lg-6">
+                                                    Phone Number:{{form.phone}}
+                                                </div>
+                                                <div class="form-group col-md-6 col-sm-12 col-lg-6">
+                                                    Email Address:{{form.email}}
+                                                </div>
+                                            </div>
+                                            <div class="row">
+                                                <div class="form-group col-md-12 col-sm-12 col-lg-12">
+                                                    Address:{{form.address}}
+                                                </div>
+
+                                            </div>
+                                            <div class="row">
+                                                <div class="form-group col-md-6 col-sm-12 col-lg-6">
+                                                    Country:{{form.country}}
+                                                </div>
+                                                <div class="form-group col-md-6 col-sm-12 col-lg-6">
+                                                    State:{{form.state}}
+                                                </div>
+
+                                            </div>
+                                            <div class="row">
+                                                <div class="form-group col-md-6 col-sm-12 col-lg-6">
+                                                    City:{{form.city}}
+                                                </div>
+                                                <div class="form-group col-md-6 col-sm-12 col-lg-6">
+                                                    Pin Code:{{form.pin_code}}
+                                                </div>
+
+                                            </div>
+
+
+                                    </div>
+
+                                </div>
+                            </div>
+
+                        </div>
+                    </div>
+                </div>
+                <!-- your order section -->
+                <div class="col-lg-6 col-md-6 col-sm-6 col-xs-12">
+                    <div class="tabs-holder horizontal">
+                        <ul class="stickynav-tabs nav nav-tabs">
+                            <li class="active"><a data-toggle="tab" href="#home"><i class="icon- icon-room_service"></i>Your Order</a></li>
+                        </ul>
+                        <div class="tab-content">
+                            <div id="home" class="tab-pane in active">
+                                <div class="menu-itam-holder">
+                                    <div id="menu-item-list-6272" class="menu-itam-list">
+                                        <ul>
+                                            {% for item in cart_items %}
+                                            <li id="cart-item-{{item.id}}">
+                                                <div class="image-holder">
+                                                    <img src="{{item.fooditem.image.url}}" alt="" style="border: 3px solid #933b1b;">
+                                                </div>
+                                                <div class="text-holder">
+                                                    <h6>{{item.fooditem}}</h6>
+                                                    <span>{{item.fooditem.description}}</span>
+                                                    <a href="{% url 'vendor_detail' item.fooditem.vendor.vendor_slug %}" class="badge badge-warning">{{ item.fooditem.vendor }}</a>
+                                                </div>
+                                                <div class="quantity" style="display: inline-block; position: absolute; top: 50%;transform: translateY(-50%);margin-top: -10px;"><span>{{item.quantities}} QTY</span></div>
+                                                <div class="price-holder">
+                                                    <span class="price">₹{{item.fooditem.price}}</span>
+                                                </div>
+                                            </li>
+                                            {% endfor %}
+                                        </ul>
+
+                                    </div>
+                                    <div>
+                                        <ul>
+                                            <li style="list-style-type:none;">
+                                                Subtotal
+                                                <span class="price float-right">
+                                                    <span class="currency">₹</span>
+                                                <span id="subtotal">{{subtotal}}</span>
+                                                </span>
+                                            </li>
+                                            {% for key, value in tax_dict.items %} {% for i, j in value.items %}
+                                            <li style="list-style-type: none;">
+                                                {{ key }} <small>({{ i }}%)</small>
+                                                <span class="price float-right">
+                                                            <span class="currency">$</span>
+                                                <span id="tax-{{ key }}">{{ j }}</span>
+                                                </span>
+                                            </li>
+                                            {% endfor %} {% endfor %}
+                                        </ul>
+                                        <li style="list-style-type:none; font-weight: 600;">
+                                            Total
+                                            <span class="price float-right">
+                                                <span class="currency">₹</span>
+                                            <span id="total">{{grand_total}}</span>
+                                            </span>
+                                        </li>
+                                        <!-- SELECT PAYMENT METHOD -->
+                                        <h5>SELECT PAYMENT METHOD</h5>
+                                        <div class="payment_method mt-3 mb-3">
+                                            <label>
+                                                <input type="radio" name="payment_method" value="PayPal">
+                                                <img src="{%static 'images/PayPal.png'%}" alt="PayPal" width="100">
+                                            </label> &ensp;
+                                            <label>
+                                                <input type="radio" name="payment_method" value="RazorPay">
+                                                <img src="{%static 'images/razorpay_logo.png'%}" alt="RazorPay" width="100">
+                                            </label>
+                                        </div>
+                                        <span class="text-danger" id="payment-method-error"></span>
+                                        <!-- SELECT PAYMENT METHOD -->
+
+                                        <button onclick="return payMethodConform()" type="submit" class="btn btn-danger w-100 p-2 mt-3 mb-3">PLACE ORDER</button>
+
+                                        </ul>
+
+                                        <!-- end the form  -->
+                                        </form>
+                                    </div>
+
+                                </div>
+                            </div>
+
+                        </div>
+                    </div>
+                </div>
+
+
+            </div>
+        </div>
+    </div>
+</div>
+<!-- Main Section End -->
+
+<script>
+    function payMethodConform() {
+        var payMethod = $("input[name='payment_method']:checked").val()
+        if (!payMethod) {
+            $('#payment-method-error').html("select payment method");
+            return false;
+        } else {
+            var conf = confirm('you have selected ' + payMethod + 'as your preferred payment method.\nclick"OK" to continue.')
+            if (conf == true) {
+                return true
+
+            } else
+                return false;
+        }
+
+    }
+    $("input[name='payment_method']").on('change', function() {
+        $('#payment-method-error').html("");
+    })
+</script>
+{%endblock%}
\ No newline at end of file
Index: foodonline/settings.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>from pathlib import Path\r\nimport os\r\nfrom django.db.models import BigAutoField\r\n\r\n\r\n\r\n# Build paths inside the project like this: BASE_DIR / 'subdir'.\r\nBASE_DIR = Path(__file__).resolve().parent.parent\r\n\r\n\r\n# Quick-start development settings - unsuitable for production\r\n# See https://docs.djangoproject.com/en/3.1/howto/deployment/checklist/\r\n\r\n# SECURITY WARNING: keep the secret key used in production secret!\r\nSECRET_KEY = '*8_6y5k5a6w3(-1r*6sa-jh_c!llj&oz+(d!i&b_-&na%fe34p'\r\n\r\n# SECURITY WARNING: don't run with debug turned on in production!\r\nDEBUG = 'True'\r\n\r\nALLOWED_HOSTS = []\r\n\r\n\r\n# Application definition\r\n\r\nINSTALLED_APPS = [\r\n    'django.contrib.admin',\r\n    'django.contrib.auth',\r\n    'django.contrib.contenttypes',\r\n    'django.contrib.sessions',\r\n    'django.contrib.messages',\r\n    'django.contrib.staticfiles',\r\n    'accounts',\r\n    'vendor',\r\n    'menu',\r\n    'marketplace',\r\n    'django.contrib.gis',\r\n    'customers',\r\n]\r\n\r\nMIDDLEWARE = [\r\n    'django.middleware.security.SecurityMiddleware',\r\n    'django.contrib.sessions.middleware.SessionMiddleware',\r\n    'django.middleware.common.CommonMiddleware',\r\n    'django.middleware.csrf.CsrfViewMiddleware',\r\n    'django.contrib.auth.middleware.AuthenticationMiddleware',\r\n    'django.contrib.messages.middleware.MessageMiddleware',\r\n    'django.middleware.clickjacking.XFrameOptionsMiddleware',\r\n]\r\n\r\nROOT_URLCONF = 'foodonline.urls'\r\n\r\nTEMPLATES = [\r\n    {\r\n        'BACKEND': 'django.template.backends.django.DjangoTemplates',\r\n        'DIRS': ['templates'],\r\n        'APP_DIRS': True,\r\n        'OPTIONS': {\r\n            'context_processors': [\r\n                'django.template.context_processors.debug',\r\n                'django.template.context_processors.request',\r\n                'django.contrib.auth.context_processors.auth',\r\n                'django.contrib.messages.context_processors.messages',\r\n                'accounts.context_processors.get_vendor',\r\n                'accounts.context_processors.get_user_profile',\r\n                'accounts.context_processors.get_google_api',\r\n                'marketplace.context_processors.get_cart_counter',\r\n                'marketplace.context_processors.get_cart_amounts',\r\n                \r\n            ],\r\n        },\r\n    },\r\n]\r\n\r\nWSGI_APPLICATION = 'foodonline.wsgi.application'\r\n\r\n\r\n# Database\r\n# https://docs.djangoproject.com/en/3.1/ref/settings/#databases\r\n\r\nDATABASES = {\r\n    'default': {\r\n        'ENGINE': 'django.contrib.gis.db.backends.postgis',\r\n        'NAME': 'foodonline',\r\n        'USER': 'postgres',\r\n        'PASSWORD': '7070158485',\r\n        'HOST': 'localhost',\r\n    }\r\n}\r\n\r\nAUTH_USER_MODEL = 'accounts.User'\r\n\r\n\r\n# Password validation\r\n# https://docs.djangoproject.com/en/3.1/ref/settings/#auth-password-validators\r\n\r\nAUTH_PASSWORD_VALIDATORS = [\r\n    {\r\n        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',\r\n    },\r\n    {\r\n        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',\r\n    },\r\n    {\r\n        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',\r\n    },\r\n    {\r\n        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',\r\n    },\r\n]\r\n\r\n\r\n# Internationalization\r\n# https://docs.djangoproject.com/en/3.1/topics/i18n/\r\n\r\nLANGUAGE_CODE = 'en-us'\r\n\r\nTIME_ZONE = 'UTC'\r\n\r\nUSE_I18N = True\r\n\r\nUSE_L10N = True\r\n\r\nUSE_TZ = True\r\n\r\n\r\n# Static files (CSS, JavaScript, Images)\r\n# https://docs.djangoproject.com/en/3.1/howto/static-files/\r\n\r\nSTATIC_URL = '/static/'\r\n\r\n\r\nSTATICFILES_DIRS = [\r\n    os.path.join(BASE_DIR, 'foodonline/static'),\r\n]\r\n\r\n#media file\r\nMEDIA_URL = '/media/'\r\n\r\nMEDIA_ROOT = os.path.join(BASE_DIR, 'media')\r\n\r\n#email configuration\r\nEMAIL_HOST = 'smtp.gmail.com'\r\nEMAIL_PORT = 587\r\nEMAIL_HOST_USER ='rajdangotest@gmail.com'\r\nEMAIL_HOST_PASSWORD = 'zwjdbqhxrhpqdzbr'\r\nEMAIL_USE_TLS = True\r\nDEFAULT_FROM_EMAIL = 'foodonline Marketplace <rajdangotest@gmail.com>'\r\n\r\n\r\nGOOGLE_API_KEY = 'AIzaSyDDnv36aSn8Ksv2FNb_YR-HPlsue0VGr-s'\r\n\r\nDEFAULT_AUTO_FIELD='django.db.models.AutoField'\r\n\r\n\r\n\r\nos.environ['PATH'] = os.path.join(BASE_DIR, 'venv\\Lib\\site-packages\\osgeo') + ';' + os.environ['PATH']\r\nos.environ['PROJ_LIB'] = os.path.join(BASE_DIR, 'venv\\Lib\\site-packages\\osgeo\\data\\proj') + ';' + os.environ['PATH']\r\nGDAL_LIBRARY_PATH = os.path.join(BASE_DIR, 'venv\\Lib\\site-packages\\osgeo\\gdal304.dll')
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/foodonline/settings.py b/foodonline/settings.py
--- a/foodonline/settings.py	(revision 96926284c9862e401d33fd268829df4a7ba99d1d)
+++ b/foodonline/settings.py	(date 1672219221324)
@@ -35,6 +35,7 @@
     'marketplace',
     'django.contrib.gis',
     'customers',
+    'orders',
 ]
 
 MIDDLEWARE = [
@@ -63,6 +64,7 @@
                 'accounts.context_processors.get_vendor',
                 'accounts.context_processors.get_user_profile',
                 'accounts.context_processors.get_google_api',
+                'accounts.context_processors.get_paypal_clint_id',
                 'marketplace.context_processors.get_cart_counter',
                 'marketplace.context_processors.get_cart_amounts',
                 
@@ -155,4 +157,12 @@
 
 os.environ['PATH'] = os.path.join(BASE_DIR, 'venv\Lib\site-packages\osgeo') + ';' + os.environ['PATH']
 os.environ['PROJ_LIB'] = os.path.join(BASE_DIR, 'venv\Lib\site-packages\osgeo\data\proj') + ';' + os.environ['PATH']
-GDAL_LIBRARY_PATH = os.path.join(BASE_DIR, 'venv\Lib\site-packages\osgeo\gdal304.dll')
\ No newline at end of file
+GDAL_LIBRARY_PATH = os.path.join(BASE_DIR, 'venv\Lib\site-packages\osgeo\gdal304.dll')
+
+
+
+
+PAYPAL_CLINT_ID = 'AXfyS-RTg6uhsghPMQxLampg6iLFtKov_9Vn_uhHgX379oaaLsEueBh7fMNV2lspOjUVqcRAsSXeTwHd'
+
+
+SECURE_CROSS_ORIGIN_OPENER_POLICY = 'same-origin-allow-popups'
\ No newline at end of file
Index: customers/views.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/customers/views.py b/customers/views.py
new file mode 100644
--- /dev/null	(date 1672066825149)
+++ b/customers/views.py	(date 1672066825149)
@@ -0,0 +1,32 @@
+from django.shortcuts import render,get_object_or_404,redirect
+from django.contrib.auth.decorators import login_required
+from accounts.forms import UserProfileForm,UserInfoForm
+from accounts.models import UserProfile
+from django.contrib import messages
+
+
+@login_required(login_url='login')
+def cprofile(request):
+    profile = get_object_or_404(UserProfile,user=request.user)
+    if request.method == 'POST':
+        profile_form = UserProfileForm(request.POST, request.FILES,instance=profile)
+        user_form = UserInfoForm(request.POST,instance=request.user)
+        if profile_form.is_valid() and user_form.is_valid():
+            profile_form.save()
+            user_form.save()
+            messages.success(request,'profile has been updated')
+            return redirect('cprofile')
+        else:
+            print(profile_form.errors)
+            print(user_form.errors)
+        
+    else:
+        profile_form = UserProfileForm(instance=profile)
+        user_form = UserInfoForm(instance=request.user)
+
+    context = {
+        'profile_form':profile_form,
+        'user_form':user_form,
+        'profile':profile,
+    }
+    return render(request,'customers/cprofile.html',context)
Index: customers/urls.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/customers/urls.py b/customers/urls.py
new file mode 100644
--- /dev/null	(date 1672042334444)
+++ b/customers/urls.py	(date 1672042334444)
@@ -0,0 +1,9 @@
+from django.urls import path
+from accounts import views as AccountViews
+from . import views
+
+urlpatterns = [
+    path('',AccountViews.custDashboard,name='customer'),
+    path('profile/',views.cprofile,name='cprofile')
+
+]
\ No newline at end of file
Index: orders/migrations/0004_payment_status.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/orders/migrations/0004_payment_status.py b/orders/migrations/0004_payment_status.py
new file mode 100644
--- /dev/null	(date 1672330971464)
+++ b/orders/migrations/0004_payment_status.py	(date 1672330971464)
@@ -0,0 +1,19 @@
+# Generated by Django 4.1.3 on 2022-12-29 16:22
+
+from django.db import migrations, models
+
+
+class Migration(migrations.Migration):
+
+    dependencies = [
+        ('orders', '0003_alter_order_payment'),
+    ]
+
+    operations = [
+        migrations.AddField(
+            model_name='payment',
+            name='status',
+            field=models.CharField(default=1, max_length=100),
+            preserve_default=False,
+        ),
+    ]
Index: marketplace/migrations/0002_tax.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/marketplace/migrations/0002_tax.py b/marketplace/migrations/0002_tax.py
new file mode 100644
--- /dev/null	(date 1670924346651)
+++ b/marketplace/migrations/0002_tax.py	(date 1670924346651)
@@ -0,0 +1,22 @@
+# Generated by Django 4.1.3 on 2022-12-13 09:39
+
+from django.db import migrations, models
+
+
+class Migration(migrations.Migration):
+
+    dependencies = [
+        ('marketplace', '0001_initial'),
+    ]
+
+    operations = [
+        migrations.CreateModel(
+            name='Tax',
+            fields=[
+                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
+                ('tax_type', models.CharField(max_length=20, unique=True)),
+                ('tax_percentage', models.DecimalField(decimal_places=2, max_digits=4, verbose_name='tax percentage(%)')),
+                ('is_active', models.BooleanField(default=True)),
+            ],
+        ),
+    ]
Index: accounts/utlis.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>from django.contrib.sites.shortcuts import get_current_site\r\nfrom django.template.loader import render_to_string\r\nfrom django.utils.http import urlsafe_base64_encode\r\nfrom django.utils.encoding import force_bytes\r\nfrom django.contrib.auth.tokens import default_token_generator\r\nfrom django.core.mail import EmailMessage\r\nfrom django.conf import settings\r\ndef detectUser(user):\r\n    if user.role == 1:\r\n        redirectUrl = 'vendorDashboard'\r\n        return redirectUrl\r\n    elif user.role == 2:\r\n        redirectUrl = 'custDashboard'\r\n        return redirectUrl\r\n    \r\n    elif user.role == None and user.is_superadmin:\r\n        redirectUrl = '/admin'\r\n        return redirectUrl\r\n\r\ndef send_verification_email(request, user, mail_subject, mail_template):\r\n    from_email = settings.DEFAULT_FROM_EMAIL\r\n    current_site = get_current_site(request)\r\n    message = render_to_string(mail_template, {\r\n        'user': user,\r\n        'domain': current_site,\r\n        'uid': urlsafe_base64_encode(force_bytes(user.pk)),\r\n        'token': default_token_generator.make_token(user),\r\n\r\n    })\r\n    to_email = user.email\r\n    mail = EmailMessage(mail_subject, message, from_email, to=[to_email])\r\n    mail.send()\r\n\r\ndef send_notification(mail_subjects, mail_template, context):\r\n    from_email = settings.DEFAULT_FROM_EMAIL\r\n    message = render_to_string(mail_template, context)\r\n    to_email = context['user'].email\r\n    mail = EmailMessage(mail_subjects, message, from_email, to=[to_email])\r\n    mail.send()\r\n    return\r\n\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/accounts/utlis.py b/accounts/utlis.py
--- a/accounts/utlis.py	(revision 96926284c9862e401d33fd268829df4a7ba99d1d)
+++ b/accounts/utlis.py	(date 1672417818968)
@@ -31,11 +31,16 @@
     mail = EmailMessage(mail_subject, message, from_email, to=[to_email])
     mail.send()
 
+
 def send_notification(mail_subjects, mail_template, context):
     from_email = settings.DEFAULT_FROM_EMAIL
     message = render_to_string(mail_template, context)
-    to_email = context['user'].email
-    mail = EmailMessage(mail_subjects, message, from_email, to=[to_email])
+    if(isinstance( context['to_email'],str)):
+        to_email = []
+        to_email.append(context['to_email'])
+    else:
+        to_email = context['to_email']
+    mail = EmailMessage(mail_subjects, message, from_email, to=to_email)
     mail.send()
     return
 
Index: customers/tests.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/customers/tests.py b/customers/tests.py
new file mode 100644
--- /dev/null	(date 1672040754393)
+++ b/customers/tests.py	(date 1672040754393)
@@ -0,0 +1,3 @@
+from django.test import TestCase
+
+# Create your tests here.
Index: customers/models.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/customers/models.py b/customers/models.py
new file mode 100644
--- /dev/null	(date 1672040754393)
+++ b/customers/models.py	(date 1672040754393)
@@ -0,0 +1,3 @@
+from django.db import models
+
+# Create your models here.
Index: vendor/models.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>from django.db import models\r\nfrom accounts.models import User, UserProfile\r\nfrom accounts.utlis import send_notification\r\nfrom datetime import time,date,datetime\r\n\r\n\r\nclass Vendor(models.Model):\r\n    user = models.OneToOneField(User, related_name='user', on_delete=models.CASCADE)\r\n    user_profile = models.OneToOneField(UserProfile, related_name='user_profile', on_delete=models.CASCADE)\r\n    vendor_name = models.CharField(max_length=50)\r\n    vendor_slug = models.SlugField(max_length=100, unique=True)\r\n    vendor_license = models.ImageField(upload_to='vendor/license')\r\n    is_approved = models.BooleanField(default=False)\r\n    created_at = models.DateTimeField(auto_now_add=True)\r\n    modified_at = models.DateTimeField(auto_now=True)\r\n\r\n    def __str__(self):\r\n        return self.vendor_name\r\n    \r\n\r\n    def is_open(self):\r\n        #today opening hour \r\n        today_date = date.today()\r\n        today = today_date.isoweekday()\r\n        current_opening_hour = OpeningHours.objects.filter(vendor=self,day=today)\r\n        now = datetime.now()\r\n        current_time = now.strftime('%H:%M:%S')\r\n        is_open = None\r\n        for i in current_opening_hour:\r\n            if not i.is_close:\r\n                start = str(datetime.strptime(i.from_hour, \"%I:%M %p\").time())\r\n                end = str(datetime.strptime(i.to_hour, \"%I:%M %p\").time())\r\n                if current_time > start and current_time < end:\r\n                    is_open = True\r\n                    break\r\n                else:\r\n                    is_open = False\r\n        return is_open\r\n\r\n    def save(self,*args,**kwargs):\r\n        if self.pk is not None:\r\n            #update\r\n            orig = Vendor.objects.get(pk=self.pk)\r\n            if orig.is_approved != self.is_approved:\r\n                context = {\r\n                    'user': self.user,\r\n                    'is_approved': self.is_approved\r\n                }\r\n\r\n                if self.is_approved == True:\r\n                    #send notification email\r\n                    mail_subjects = 'congratulation! your restaurant is approved'\r\n                    mail_template = 'accounts/emails/admin_approval_email.html'\r\n\r\n                    send_notification(mail_subjects, mail_template, context)\r\n            else:\r\n                #send notification email\r\n                mail_subjects = 'sorry your are not eligible for publishing your food manu in public marketplace'\r\n                mail_template = 'accounts/emails/admin_approval_email.html'\r\n                context = {\r\n                    'user': self.user,\r\n                    'is_approved': self.is_approved\r\n                }\r\n                send_notification(mail_subjects, mail_template, context)\r\n        return super(Vendor, self).save(*args, **kwargs)\r\n\r\n\r\nDAYS = [\r\n    (1,('Monday')),\r\n    (2,('Tuesday')),\r\n    (3,('Wednesday')),\r\n    (4,('Thursday')),\r\n    (5,('Friday')),\r\n    (6,('Saturday')),\r\n    (7,('Sunday')),\r\n]\r\n\r\n\r\nHOUR_OF_DAY_24 = [(time(h, m).strftime('%I:%M %p'),time(h, m).strftime('%I:%M %p'))for h in range(0, 24)for m in (0,30)]\r\n\r\nclass OpeningHours(models.Model):\r\n    vendor = models.ForeignKey(Vendor,on_delete=models.CASCADE)\r\n    day = models.IntegerField(choices=DAYS)\r\n    from_hour = models.CharField(choices= HOUR_OF_DAY_24, max_length=10, blank=True)\r\n    to_hour = models.CharField(choices=HOUR_OF_DAY_24,max_length=10,blank=True)\r\n    is_close = models.BooleanField(default=False)\r\n\r\n    class Meta:\r\n        ordering = ('day','from_hour')\r\n        unique_together = ('vendor','day','from_hour', 'to_hour')\r\n    \r\n    def __str__(self):\r\n        return self.get_day_display()\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/vendor/models.py b/vendor/models.py
--- a/vendor/models.py	(revision 96926284c9862e401d33fd268829df4a7ba99d1d)
+++ b/vendor/models.py	(date 1672389777838)
@@ -44,7 +44,8 @@
             if orig.is_approved != self.is_approved:
                 context = {
                     'user': self.user,
-                    'is_approved': self.is_approved
+                    'is_approved': self.is_approved,
+                    'to_email':self.user.email
                 }
 
                 if self.is_approved == True:
@@ -59,7 +60,8 @@
                 mail_template = 'accounts/emails/admin_approval_email.html'
                 context = {
                     'user': self.user,
-                    'is_approved': self.is_approved
+                    'is_approved': self.is_approved,
+                    'to_email':self.user.email
                 }
                 send_notification(mail_subjects, mail_template, context)
         return super(Vendor, self).save(*args, **kwargs)
Index: customers/apps.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/customers/apps.py b/customers/apps.py
new file mode 100644
--- /dev/null	(date 1672040754393)
+++ b/customers/apps.py	(date 1672040754393)
@@ -0,0 +1,6 @@
+from django.apps import AppConfig
+
+
+class CustomersConfig(AppConfig):
+    default_auto_field = 'django.db.models.BigAutoField'
+    name = 'customers'
Index: customers/admin.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/customers/admin.py b/customers/admin.py
new file mode 100644
--- /dev/null	(date 1672040754377)
+++ b/customers/admin.py	(date 1672040754377)
@@ -0,0 +1,3 @@
+from django.contrib import admin
+
+# Register your models here.
Index: marketplace/views.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>from django.shortcuts import render, get_object_or_404,redirect\r\nfrom vendor.models import Vendor,OpeningHours\r\nfrom menu.models import Category,FoodItem\r\nfrom django.db.models import Prefetch\r\nfrom django.http.response import HttpResponse,JsonResponse\r\nfrom . models import Cart\r\nfrom .context_processors import get_cart_counter,get_cart_amounts\r\nfrom django.contrib.auth.decorators import login_required\r\nfrom django.db.models import Q\r\nfrom django.contrib.gis.geos import GEOSGeometry\r\nfrom django.contrib.gis.measure import D\r\nfrom django.contrib.gis.db.models.functions import Distance\r\nfrom datetime import date,datetime\r\n\r\ndef marketplace(request):\r\n    vendors = Vendor.objects.filter(is_approved=True, user__is_active=True)\r\n    vendor_count = vendors.count()\r\n    context = {\r\n        'vendors': vendors,\r\n        'vendor_count': vendor_count\r\n    }\r\n    return render(request,'marketplace/listing.html', context)\r\n\r\ndef vendor_detail(request, vendor_slug):\r\n    vendor = get_object_or_404(Vendor,vendor_slug=vendor_slug)\r\n\r\n\r\n    categories = Category.objects.filter(vendor=vendor).prefetch_related(\r\n        Prefetch(\r\n            'fooditems',\r\n            queryset= FoodItem.objects.filter(is_available=True)\r\n        )\r\n    )\r\n    #OPENING HOURS\r\n    opening_hour = OpeningHours.objects.filter(vendor=vendor).order_by('day','-from_hour')\r\n    #today opening hour \r\n    today_date = date.today()\r\n    today = today_date.isoweekday()\r\n    \r\n    current_opening_hour = OpeningHours.objects.filter(vendor=vendor,day=today)\r\n   \r\n     \r\n    if request.user.is_authenticated:\r\n        cart_items = Cart.objects.filter(user=request.user)\r\n    else:\r\n        cart_items = None\r\n\r\n    context = {\r\n        'vendor': vendor,\r\n        'categories': categories,\r\n        'cart_items':cart_items,\r\n        'opening_hour':opening_hour,\r\n        'current_opening_hour':current_opening_hour,\r\n       \r\n    }\r\n    return render(request, 'marketplace/vendor_detail.html',context)\r\n\r\ndef add_to_cart(request, food_id):\r\n    if request.user.is_authenticated:\r\n        if request.headers.get('x-requested-with') == 'XMLHttpRequest':\r\n            try:\r\n                fooditem = FoodItem.objects.get(id=food_id)\r\n                try:\r\n                    chkCart = Cart.objects.get(user=request.user,fooditem=fooditem)\r\n                    # increase quantity\r\n                    chkCart.quantities +=1\r\n                    chkCart.save()\r\n                    return JsonResponse({'status': 'success', 'message': 'increased the cart quantity ','cart_counter':get_cart_counter(request),'qty':chkCart.quantities,'cart_amount':get_cart_amounts(request)})\r\n                except:\r\n                    chkCart = Cart.objects.create(user= request.user,fooditem=fooditem, quantities=1)\r\n                    return JsonResponse({'status': 'success', 'message': 'added the food to the cart','cart_counter':get_cart_counter(request),'qty':chkCart.quantities,'cart_amount':get_cart_amounts(request)})\r\n\r\n            except:\r\n                return JsonResponse({'status': 'failed', 'message': 'food did not exists '})\r\n        else:\r\n            return JsonResponse({'status': 'failed', 'message': 'its not the ajax '})\r\n    else:\r\n        return JsonResponse({'status': 'login_required', 'message': 'Please login to continue'})\r\n\r\ndef decrease_cart(request,food_id):\r\n    if request.user.is_authenticated:\r\n        if request.headers.get('x-requested-with') == 'XMLHttpRequest':\r\n            #if food item exist\r\n            try:\r\n                fooditem = FoodItem.objects.get(id=food_id)\r\n                #if the user is already added the food or not in the cart\r\n                try:\r\n                    chkCart = Cart.objects.get(user=request.user,fooditem=fooditem)\r\n                    if chkCart.quantities > 1:\r\n\r\n                        # decrease the quantity\r\n                        chkCart.quantities -=1\r\n                        chkCart.save()\r\n                            \r\n                    else:\r\n                        chkCart.delete()\r\n                        chkCart.quantities = 0\r\n                        return JsonResponse({'status': 'success','cart_counter':get_cart_counter(request),'qty':chkCart.quantities,'cart_amount':get_cart_amounts(request)})\r\n                except:\r\n                    return JsonResponse({'status': 'failed','message': 'you dont have this item in your cart'})\r\n\r\n            except:\r\n                return JsonResponse({'status': 'failed', 'message': 'food did not exists '})\r\n        else:\r\n            return JsonResponse({'status': 'failed', 'message': 'Invalid request '})\r\n    else:\r\n        return JsonResponse({'status': 'login_required', 'message': 'Please login to continue'})\r\n\r\n\r\n\r\n@login_required(login_url='login')\r\ndef cart(request):\r\n    cart_items = Cart.objects.filter(user=request.user).order_by('created_at')\r\n    context = {\r\n        'cart_items':cart_items,\r\n    }\r\n    return render(request,'marketplace/cart.html',context)\r\n\r\n\r\ndef delete_cart(request, cart_id):\r\n    if request.user.is_authenticated:\r\n        if request.headers.get('x-requested-with') == 'XMLHttpRequest':\r\n            try:\r\n                # Check if the cart item exists\r\n                cart_item = Cart.objects.get(user=request.user, id=cart_id)\r\n                if cart_item:\r\n                    cart_item.delete()\r\n                    return JsonResponse({'status': 'Success', 'message': 'Cart item has been deleted!', 'cart_counter': get_cart_counter(request)})\r\n            except:\r\n                return JsonResponse({'status': 'Failed', 'message': 'Cart Item does not exist!'})\r\n        else:\r\n            return JsonResponse({'status': 'Failed', 'message': 'Invalid request!'})\r\n\r\n\r\n\r\n\r\ndef search(request):\r\n    if not  'address' in request.GET:\r\n        return redirect('marketplace')\r\n\r\n    else:\r\n\r\n        address = request.GET['address']\r\n        latitude = request.GET['lat']\r\n        longitude = request.GET['lng']\r\n        radius = request.GET['radius']\r\n        keyword = request.GET['keyword']\r\n        # get vendor id  that has food item the user is looking for\r\n        fetch_vendors_by_fooditems = FoodItem.objects.filter(food_title__icontains = keyword, is_available =True).values_list('vendor',flat=True)\r\n        print(fetch_vendors_by_fooditems)\r\n\r\n        vendors = Vendor.objects.filter(Q(id__in = fetch_vendors_by_fooditems) | Q(vendor_name__icontains = keyword,is_approved =True,user__is_active = True))\r\n        if latitude and longitude and radius:\r\n            pnt = GEOSGeometry('POINT(%s %s)' %(longitude, latitude))\r\n            \r\n\r\n            vendors = Vendor.objects.filter(Q(id__in = fetch_vendors_by_fooditems) | Q(vendor_name__icontains = keyword,is_approved =True,user__is_active = True),\r\n            user_profile__location__distance_lte=(pnt, D(km=radius))\r\n            ).annotate(distance = Distance('user_profile__location',pnt)).order_by('distance')\r\n            \r\n\r\n            for v in vendors:\r\n                    v.kms = round(v.distance.km, 1)\r\n        \r\n        vendor_count = vendors.count()\r\n        context = {\r\n            'vendors':vendors,\r\n            'vendor_count':vendor_count,\r\n            'source_location':address,\r\n        }\r\n\r\n        return render(request,'marketplace/listing.html',context)
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/marketplace/views.py b/marketplace/views.py
--- a/marketplace/views.py	(revision 96926284c9862e401d33fd268829df4a7ba99d1d)
+++ b/marketplace/views.py	(date 1672148638988)
@@ -11,6 +11,8 @@
 from django.contrib.gis.measure import D
 from django.contrib.gis.db.models.functions import Distance
 from datetime import date,datetime
+from orders.forms import OrderForm
+from accounts.models import UserProfile
 
 def marketplace(request):
     vendors = Vendor.objects.filter(is_approved=True, user__is_active=True)
@@ -169,4 +171,32 @@
             'source_location':address,
         }
 
-        return render(request,'marketplace/listing.html',context)
\ No newline at end of file
+        return render(request,'marketplace/listing.html',context)
+
+@login_required(login_url='login')
+def checkout(request):
+    cart_items = Cart.objects.filter(user = request.user).order_by('created_at')
+    cart_count = cart_items.count()
+    if cart_count <= 0:
+        return redirect('marketplace')
+
+    user_profile = UserProfile.objects.get(user = request.user)
+    default_value = {
+        'first_name':request.user.first_name,
+        'last_name':request.user.last_name,
+        'phone':request.user.phone_number,
+        'email':request.user.email,
+        'address': user_profile.address,
+        'country':user_profile.country,
+        'state':user_profile.state,
+        'city':user_profile.city,
+        'pin_code':user_profile.pin_code
+
+    }
+    form = OrderForm(initial=default_value)
+    context = {
+        'form':form,
+        'cart_items':cart_items,
+    }
+    return render(request,'marketplace/checkout.html',context)
+
Index: templates/base.html
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>{%load static %}\r\n\r\n\r\n<html lang=\"en\">\r\n\r\n<head>\r\n\t<meta charset=\"utf-8\">\r\n\t<meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\r\n\t<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\r\n\t<title>FoodOnline</title>\r\n\t<!-- Google Font Family Link Start -->\r\n\t<link rel=\"stylesheet\" type=\"text/css\" href=\"https://fonts.googleapis.com/css?family=Montserrat:400,700\">\r\n\t<link rel=\"stylesheet\" type=\"text/css\" href=\"https://fonts.googleapis.com/css?family=Open+Sans:400,700,800\">\r\n\t<!-- Google Font Family Link End -->\r\n\r\n\t<!-- CSS -->\r\n\t<link href=\"{% static 'css/iconmoon.css' %}\" rel=\"stylesheet\">\r\n\t<link href=\"{% static 'css/style.css' %}\" rel=\"stylesheet\">\r\n\t<link href=\"{% static 'css/cs-foodbakery-plugin.css' %}\" rel=\"stylesheet\">\r\n\t<link rel=\"stylesheet\" href=\"https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css\">\r\n\t<link href=\"{% static 'css/bootstrap-slider.css' %}\" rel=\"stylesheet\">\r\n\r\n\t<link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css\">\r\n\t<!-- JAVASCRIPT -->\r\n\t<script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.4.1/jquery.min.js\"></script>\r\n\t<script src=\"{% static 'js/modernizr.js' %}\"></script>\r\n\t<script src=\"{% static 'js/bootstrap.js' %}\"></script>\r\n\t<link rel=\"stylesheet\" href=\"{% static 'css/custom.css' %}\">\r\n\t{% if '/' == request.path or 'profile' in request.path %}\r\n    <script src=\"https://maps.googleapis.com/maps/api/js?key={{GOOGLE_API_KEY}}&libraries=places&callback=initAutoComplete\" async defer></script>\r\n\t{% endif %}\r\n\t<script src=\"https://unpkg.com/sweetalert/dist/sweetalert.min.js\"></script>\r\n\t<script src=\"{%static 'js/custom.js'%}\"></script>\r\n\t{% comment %} <script src=\"https://kit.fontawesome.com/yourcode.js\" crossorigin=\"anonymous\"></script> {% endcomment %}\r\n\r\n\t<style>\r\n\t\tbody, .main-section p, .mce-content-body p{\r\n\t\t\tfont:Normal  14px/24px \"Open Sans\", sans-serif;letter-spacing: 0px;text-transform: none;color: #515151 !important;\r\n\t\t}\r\n\r\n\t\t{% comment %} {% if '/marketplace/' == request.path  %}\r\n\t\t\t#footer {\r\n\t\t\t\tbackground: #282c35;\r\n\t\t\t\tjustify-content: center;\r\n\t\t\t\talign-items: center;\r\n\t\t\t\tmargin: 4px auto;\r\n\t\t\t\twidth: 1517px;\r\n\t\t\t\tmargin-left: -202px;\r\n\t\t\t}\r\n\t\t{%endif%} {% endcomment %}\r\n\t\t\r\n\t</style>\r\n</head>\r\n\r\n<body>\r\n    <!-- header-->\r\n\t{%include 'includes/navbar.html'%}\r\n    <!--all content-->\r\n\t{% block content %}\r\n\t\t<!-- our content -->\r\n\t{% endblock %}\r\n    <!--footer-->\r\n\t{%include 'includes/alert.html'%}\r\n\t{%include 'includes/footer.html'%}\r\n\t<!--Main Wrapper-->\r\n\r\n\r\n\r\n\r\n\r\n</body>\r\n\r\n</html>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/templates/base.html b/templates/base.html
--- a/templates/base.html	(revision 96926284c9862e401d33fd268829df4a7ba99d1d)
+++ b/templates/base.html	(date 1672218876798)
@@ -31,6 +31,10 @@
 	{% endif %}
 	<script src="https://unpkg.com/sweetalert/dist/sweetalert.min.js"></script>
 	<script src="{%static 'js/custom.js'%}"></script>
+
+
+	 <!-- Include the PayPal JavaScript SDK -->
+	 <script src="https://www.paypal.com/sdk/js?client-id={{PAYPAL_CLINT_ID}}&currency=USD"></script>
 	{% comment %} <script src="https://kit.fontawesome.com/yourcode.js" crossorigin="anonymous"></script> {% endcomment %}
 
 	<style>
Index: foodonline/urls.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>from django.contrib import admin\r\nfrom django.urls import path, include\r\nfrom . import views\r\nfrom django.conf import settings\r\nfrom django.conf.urls.static import static\r\nfrom marketplace import views as marketplaceViews\r\n\r\nurlpatterns = [\r\n    path('admin/', admin.site.urls),\r\n    path('', views.home, name='home'),\r\n    path('', include('accounts.urls')),\r\n     #cart creations \r\n    path('cart/', marketplaceViews.cart, name='cart'),\r\n\r\n    path('marketplace/', include('marketplace.urls')),\r\n    #search\r\n    path('search/',marketplaceViews.search, name='search'),\r\n\r\n\r\n\r\n] + static(settings.MEDIA_URL, document_root=settings.MEDIA_ROOT)\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/foodonline/urls.py b/foodonline/urls.py
--- a/foodonline/urls.py	(revision 96926284c9862e401d33fd268829df4a7ba99d1d)
+++ b/foodonline/urls.py	(date 1672158699303)
@@ -16,6 +16,11 @@
     #search
     path('search/',marketplaceViews.search, name='search'),
 
+    #checkout
 
+    path('checkout/',marketplaceViews.checkout, name='checkout'),
+
+    # orders
+    path('orders/',include('orders.urls')),
 
 ] + static(settings.MEDIA_URL, document_root=settings.MEDIA_ROOT)
Index: templates/orders/place_order.html
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/templates/orders/place_order.html b/templates/orders/place_order.html
new file mode 100644
--- /dev/null	(date 1672510950640)
+++ b/templates/orders/place_order.html	(date 1672510950640)
@@ -0,0 +1,191 @@
+{% extends 'base.html'%} {% block content %} {% load static %}
+<!-- Main Section Start -->
+<div class="main-section">
+
+    <div class="page-section pt-5">
+        <div class="container">
+            <div class="row">
+
+                <div class="col-lg-8 col-md-8 col-sm-8 col-xs-12">
+                    <div class="tabs-holder horizontal">
+                        <ul class="stickynav-tabs nav nav-tabs">
+                            <li class="active">
+                                <a data-toggle="tab" href="#home"> <i class="fa fa-shopping-cart text-danger"></i>Riview Your Billing Address</a>
+                            </li>
+
+                        </ul>
+                        <div class="tab-content">
+                            <div id="home" class="tab-pane in active">
+                                <div class="menu-itam-holder">
+                                    <div id="menu-item-list-6272" class="menu-itam-list">
+                                        <div class="billing-address">
+                                            <div><b>{{order.name}}</b></div>
+                                            <div>{{order.address}}</div>
+                                            <div>{{order.city}} - {{order.pin_code}}</div>
+                                            <div>{{order.state}}, {{order.country}}</div>
+                                            <div><b>Phone: {{order.phone}}</b></div>
+                                            <div><b>Email: {{order.email}}</b></div>
+                                            <div><b>Payment: {{order.payment_method}}</b></div>
+                                            <br>
+                                            <div>
+                                                <a href="{% url 'checkout'%}" class="btn btn-outline-danger mb-3">Edit</a>
+                                            </div>
+                                        </div>
+                                    </div>
+                                </div>
+                            </div>
+
+                        </div>
+                    </div>
+                </div>
+                <!-- your order section -->
+                <div class="col-lg-4 col-md-4 col-sm-4 col-xs-12">
+                    <div class="tabs-holder horizontal">
+                        <ul class="stickynav-tabs nav nav-tabs">
+                            <li class="active"><a data-toggle="tab" href="#home"><i class="icon- icon-room_service"></i>Your Order</a></li>
+                        </ul>
+                        <div class="tab-content" style="width: 472px;">
+                            <div id="home" class="tab-pane in active">
+                                <div class="menu-itam-holder">
+
+                                    <div style="margin: -8px;">
+                                        <table class="table-hover">
+                                            <tbody>
+                                                {% for item in cart_items%}
+                                                <tr>
+                                                    <td><img src="{{item.fooditem.image.url}}" alt="food image" width="40"></td>
+                                                    <td><b>{{item.fooditem}}</b></td>
+                                                    <td>{{item.quantity}}</td>
+                                                    <td>₹{{item.fooditem.price}}</td>
+                                                </tr>
+                                                {%endfor%}
+                                            </tbody>
+                                        </table>
+                                        <ul>
+                                            <li style="list-style-type:none;">
+                                                Subtotal
+                                                <span class="price float-right">
+                                                    <span class="currency">₹</span>
+                                                <span id="subtotal">{{subtotal}}</span>
+                                                </span>
+                                            </li>
+                                            {% for key, value in tax_dict.items %} {% for i, j in value.items %}
+                                            <li style="list-style-type: none;">
+                                                {{ key }} <small>({{ i }}%)</small>
+                                                <span class="price float-right">
+                                                            <span class="currency">$</span>
+                                                <span id="tax-{{ key }}">{{ j }}</span>
+                                                </span>
+                                            </li>
+                                            {% endfor %} {% endfor %}
+
+                                            <li style="list-style-type:none; font-weight: 600;">
+                                                Total
+                                                <span class="price float-right">
+                                                    <span class="currency">₹</span>
+                                                <span id="total">{{grand_total}}</span>
+                                                </span>
+                                            </li>
+                                            {% comment %} paypal checkout button {% endcomment %}
+                                            <div id="paypal-button-container"></div>
+                                        </ul>
+                                    </div>
+
+                                </div>
+                            </div>
+
+                        </div>
+                    </div>
+                </div>
+
+
+            </div>
+        </div>
+    </div>
+</div>
+<!-- Main Section End -->
+<script>
+    function getCookie(name) {
+        let cookieValue = null;
+        if (document.cookie && document.cookie !== '') {
+            const cookies = document.cookie.split(';');
+            for (let i = 0; i < cookies.length; i++) {
+                const cookie = cookies[i].trim();
+                // Does this cookie string begin with the name we want?
+                if (cookie.substring(0, name.length + 1) === (name + '=')) {
+                    cookieValue = decodeURIComponent(cookie.substring(name.length + 1));
+                    break;
+                }
+            }
+        }
+        return cookieValue;
+    }
+
+
+
+    var grand_total = '{{grand_total}}'
+    var url = "{% url 'payments' %}"
+    var order_number = "{{order.order_number}}"
+    const csrftoken = getCookie('csrftoken');
+    var order_complete = "{% url 'order_complete' %}"
+        // Render the PayPal button into #paypal-button-container
+    paypal.Buttons({
+
+        // Set up the transaction
+        createOrder: function(data, actions) {
+            return actions.order.create({
+                purchase_units: [{
+                    amount: {
+                        value: grand_total
+                    }
+                }]
+            });
+        },
+
+        // Finalize the transaction
+        onApprove: function(data, actions) {
+            return actions.order.capture().then(function(orderData) {
+                // Successful capture! For demo purposes:
+                console.log(orderData)
+                var transaction = orderData.purchase_units[0].payments.captures[0];
+                console.log(transaction.id)
+
+                var transaction_id = transaction.id
+                var status = orderData.status
+                var payment_method = 'PayPal'
+                sendTransaction(transaction_id, payment_method, status)
+
+
+
+                // Replace the above to show a success message within this page, e.g.
+                const element = document.getElementById('paypal-button-container');
+                element.innerHTML = '';
+                element.innerHTML = '<h4 class="text-center"><i class="fa fa-spinner fa-spin"></i> Please wait..</h4>';
+                // Or go to another URL:  actions.redirect('thank_you.html');
+            });
+        }
+
+
+    }).render('#paypal-button-container');
+    //send data to payment view to store in database
+    function sendTransaction(transaction_id, payment_method, status) {
+        $.ajax({
+            type: 'POST',
+            url: url,
+            data: {
+                'order_number': order_number,
+                'transaction_id': transaction_id,
+                'payment_method': payment_method,
+                'status': status,
+                'csrfmiddlewaretoken': csrftoken
+            },
+            success: function(response) {
+                console.log('response==>', response)
+
+                window.location.href = order_complete + '?order_no=' + response.order_number + '&trans_id=' + response.transaction_id
+            }
+        })
+    }
+</script>
+
+{%endblock%}
\ No newline at end of file
Index: templates/includes/c_sidebar.html
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><!DOCTYPE html>\r\n<html lang=\"en\">\r\n<head>\r\n    <meta charset=\"UTF-8\">\r\n    <title>Title</title>\r\n</head>\r\n<body>\r\n<div class=\"user-account-nav user-account-sidebar\">\r\n<div class=\"user-nav-list\">\r\n\t<ul>\r\n\t\t<li class=\"{% if '/custDashboard/' == request.path or '/customers/' ==  request.path %} active {% endif %}\"><a href=\"{% url 'customer'%}\"><i class=\"icon-dashboard3\"></i>Dashboard</a></li>\r\n\t\t<li><a href=\"#\"><i class=\"icon-add_shopping_cart\"></i>My Order</a></li>\r\n\t\t<li class=\"{% if '/profile/' in request.path %}active{% endif %}\"><a href=\"{% url 'cprofile'%}\"><i class=\"icon-build\"></i>My Settings</a></li>\r\n\t\t<li><a href=\"restaurant-orders.html\"><i class=\"icon-unlock-alt\"></i>Change Password</a></li>\r\n\t\t<li><a href=\"restaurant-earnings.html\"><i class=\"icon-log-out\"></i>Sign Out</a></li>\r\n\r\n\t</ul>\r\n</div>\r\n</div>\r\n</body>\r\n</html>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/templates/includes/c_sidebar.html b/templates/includes/c_sidebar.html
--- a/templates/includes/c_sidebar.html	(revision 96926284c9862e401d33fd268829df4a7ba99d1d)
+++ b/templates/includes/c_sidebar.html	(date 1672476509726)
@@ -9,7 +9,7 @@
 <div class="user-nav-list">
 	<ul>
 		<li class="{% if '/custDashboard/' == request.path or '/customers/' ==  request.path %} active {% endif %}"><a href="{% url 'customer'%}"><i class="icon-dashboard3"></i>Dashboard</a></li>
-		<li><a href="#"><i class="icon-add_shopping_cart"></i>My Order</a></li>
+		<li><a href="{% url 'order_complete'%}"><i class="icon-add_shopping_cart"></i>My Order</a></li>
 		<li class="{% if '/profile/' in request.path %}active{% endif %}"><a href="{% url 'cprofile'%}"><i class="icon-build"></i>My Settings</a></li>
 		<li><a href="restaurant-orders.html"><i class="icon-unlock-alt"></i>Change Password</a></li>
 		<li><a href="restaurant-earnings.html"><i class="icon-log-out"></i>Sign Out</a></li>
Index: templates/orders/order_confirmation_email.html
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/templates/orders/order_confirmation_email.html b/templates/orders/order_confirmation_email.html
new file mode 100644
--- /dev/null	(date 1672390338922)
+++ b/templates/orders/order_confirmation_email.html	(date 1672390338922)
@@ -0,0 +1,8 @@
+{% autoescape off %}
+Hi {{user.first_name}},
+
+Thank you for your order.
+Your order number:{{order.order_number}}
+Your Transaction ID :{{order.payment.transaction_id}}
+
+{% endautoescape %}
\ No newline at end of file
Index: templates/orders/new_order_received.html
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/templates/orders/new_order_received.html b/templates/orders/new_order_received.html
new file mode 100644
--- /dev/null	(date 1672417913974)
+++ b/templates/orders/new_order_received.html	(date 1672417913974)
@@ -0,0 +1,8 @@
+{% autoescape off %}
+
+
+you have recevied a new order.
+Your order number:{{order.order_number}}
+Your Transaction ID :{{order.payment.transaction_id}}
+
+{% endautoescape %}
\ No newline at end of file
Index: accounts/context_processors.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>from vendor.models import Vendor\r\nfrom accounts.models import UserProfile\r\n\r\nfrom django.conf import settings\r\nfrom foodonline import settings\r\n\r\ndef get_vendor(request):\r\n    try:\r\n        vendor = Vendor.objects.get(user= request.user)\r\n    except:\r\n        vendor = None\r\n    return dict(vendor=vendor)\r\n\r\ndef get_user_profile(request):\r\n    try:\r\n        user_profile = UserProfile.objects.get(user= request.user)\r\n    except:\r\n        user_profile = None\r\n    return dict(user_profile=user_profile)\r\n\r\ndef get_google_api(request):\r\n\r\n    return {'GOOGLE_API_KEY': settings.GOOGLE_API_KEY}\r\n\r\n\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/accounts/context_processors.py b/accounts/context_processors.py
--- a/accounts/context_processors.py	(revision 96926284c9862e401d33fd268829df4a7ba99d1d)
+++ b/accounts/context_processors.py	(date 1672218696491)
@@ -23,3 +23,7 @@
     return {'GOOGLE_API_KEY': settings.GOOGLE_API_KEY}
 
 
+def get_paypal_clint_id(request):
+    return{'PAYPAL_CLINT_ID':settings.PAYPAL_CLINT_ID}
+
+
Index: templates/orders/order_complete.html
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/templates/orders/order_complete.html b/templates/orders/order_complete.html
new file mode 100644
--- /dev/null	(date 1672511924848)
+++ b/templates/orders/order_complete.html	(date 1672511924848)
@@ -0,0 +1,106 @@
+{% extends 'base.html'%} {% load static %} {% block content %}
+
+<div class="container mt-5 mb-5">
+    <div class="justify-content-center row">
+        <div class="col-md-8">
+            <div class="bg-white p-3">
+                <img src="{% static 'logo/foodOnlineLogo.png' %}" alt="foodOnlineLogo">
+                <div class="row">
+                    <div class="col-md-6">
+                        <h4 class="mt-2 mb-3">Thank You for your order</h4>
+
+                    </div>
+                    <div class="col-md-6 text-right">
+                        <p class="mb-0">{{order.name}}</p>
+                        <p class="mb-0">{{order.address}}</p>
+                        <p class="mb-0">{{order.phone}}</p>
+                        <p class="mb-0">{{order.email}}</p>
+                    </div>
+
+                </div>
+                <h6>Hello {{order.name}},</h6><span>review your details below</span>
+                <hr>
+                <div class="d-flex justify-content-between">
+                    <div>
+                        <span class="d-block">Order Date:</span><span class="font-weight-bold">{{order.created_at}}</span>
+                    </div>
+                    <div>
+                        <span class="d-block">Order No:</span><span class="font-weight-bold">{{order.order_number}}</span>
+                    </div>
+                    <div>
+                        <span class="d-block">Payment Method:</span><span class="font-weight-bold">{{order.payment_method}}</span>
+                    </div>
+                    <div>
+                        <span class="d-block">Transaction ID:</span><span class="font-weight-bold">{{order.payment.transaction_id}}</span>
+                    </div>
+                </div>
+                <hr>
+                <table class="table-hover">
+                    <tbody>
+                        {% for item in ordered_food %}
+                        <tr>
+                            <td><img src="{{item.fooditem.image.url}}" alt="food image" width="40"></td>
+                            <td>
+                                <p class="mb-0"><b>{{item.fooditem}}</b></p>
+                                <a class="text-muted" href="{% url 'vendor_detail' item.fooditem.vendor.vendor_slug %}" class="badge badge-warning">{{ item.fooditem.vendor }}</a>
+                            </td>
+                            <td>{{item.quantity}} Qty</td>
+                            <td>₹{{item.fooditem.price}}</td>
+                        </tr>
+                        {%endfor%}
+                    </tbody>
+                </table>
+                <div class="row mt-5">
+                    <div class="d-flex justify-content-center col-md-6">
+                        <img src="{% static 'images/paid.png' %}" width="200" alt="">
+                    </div>
+                    <div class="col-md-6">
+                        <ul>
+                            <li style="list-style-type:none;">
+                                Subtotal
+                                <span class="price float-right">
+                                    <span class="currency">₹</span>
+                                <span id="subtotal">{{subtotal}}</span>
+                                </span>
+                            </li>
+                            {% for key, value in tax_data.items %} {% for i, j in value.items %}
+                            <li style="list-style-type: none;">
+                                {{ key }} <small>({{ i }}%)</small>
+                                <span class="price float-right">
+                                            <span class="currency">$</span>
+                                <span id="tax-{{ key }}">{{ j }}</span>
+                                </span>
+                            </li>
+                            {% endfor %} {% endfor %}
+
+                            <li style="list-style-type:none; font-weight: 600;">
+                                Total
+                                <span class="price float-right">
+                                    <span class="currency">₹</span>
+                                <span id="total">{{order.total}}</span>
+                                </span>
+                            </li>
+                            {% comment %} paypal checkout button {% endcomment %}
+
+                        </ul>
+                    </div>
+                </div>
+                <hr>
+                <div class="d-flex justify-content-between">
+                    <div>
+                        <span class="d-flex font-weight-bold">Thank for ordering with us.</span>
+                        <span>
+                            foodOnline Team
+                        </span>
+                    </div>
+                    <div class="d-flex justify-content-end align-items-end">
+                        <span class="d-flex font-weight-bold">Need Help?</span>
+                        <span>Call- +91 7011255665</span>
+
+                    </div>
+                </div>
+            </div>
+        </div>
+    </div>
+</div>
+{% endblock %}
\ No newline at end of file
diff --git a/orders/__init__.py b/orders/__init__.py
new file mode 100644
diff --git a/customers/migrations/__init__.py b/customers/migrations/__init__.py
new file mode 100644
diff --git a/orders/migrations/__init__.py b/orders/migrations/__init__.py
new file mode 100644
diff --git a/customers/__init__.py b/customers/__init__.py
new file mode 100644
